{"version":3,"file":"public/js/agchart.js","sources":["app/agchart.coffee","app/components/label.coffee","app/components/title.coffee","app/components/tooltip.coffee","app/config.coffee","app/effects/point.coffee","app/initialize.coffee","app/utils/design.coffee","app/utils/domain.coffee","app/utils/palette.coffee","app/utils/scale.coffee","app/utils/time.coffee","app/utils/tools.coffee"],"names":[],"mappings":"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","sourcesContent":["module.exports = exp = {}\nM = {\n  config  : require 'config'\n  palette : require 'utils/palette'\n  tools   : require 'utils/tools'\n  design  : require 'utils/design'\n  effectsPoint : require 'effects/point'\n  scale   : require 'utils/scale'\n  domain  : require 'utils/domain'\n\n  # Components\n  title: require 'components/title'\n  label: require 'components/label'\n  tooltip: require 'components/tooltip'\n}\n\nexp.Main = class Main\n  constructor: (args) ->\n    # Loading default configuration merged with user\n    # configuration\n    @_CONF = new M.config.Main(args.config).get()\n    @_PALETTE = new M.palette.Main(@_CONF.point.color)\n    @_CANVAS = undefined # THIS IS A DOM, rename to SVG\n    @_TOOLTIP = undefined # THIS IS A CLASS\n\n    # Class components\n    @_CLASS = {\n      tooltip: undefined\n      title: undefined\n    }\n\n    # TODO: Might be better ?\n    #@_SETTINGS = {\n    #  config: undefined\n    #  scale: undefined\n    #  palette: undefined\n    #  domain: undefined\n    #}\n\n    # TODO: We can't change args.series !\n    # thus it must be the same after executing this function\n    @_SERIES = M.tools.prepareSeries({\n      series: args.series\n      palette: @_PALETTE\n      confPoint: @_CONF.point})\n\n    # TODO: the auto mode is a bit broken\n    if @_CONF.canvas.padding == 'auto'\n      @_CONF.canvas.padding = M.design.computePadding(@_CONF.point)\n\n    @_DOMAIN = M.domain.computeDomain(args.series)\n    M.domain.fixDomain({\n      domain: @_DOMAIN\n      confAxis: @_CONF.axis\n    })\n\n    @_SCALE = M.scale.computeScales({\n      confCanvas: @_CONF.canvas\n      confAxis: @_CONF.axis\n      domain: @_DOMAIN\n    })\n\n    @initSVG(@_CONF.canvas)\n\n\n  # Returns information about the chart\n  toString: ->\n    console.log \"Canvas in #{@_CONF.selector}\"\n    console.log \"Config\", @_CONF\n    console.log \"Series:\", @_SERIES\n    return\n\n  # Creating the SVG container in a predefined selector\n  initSVG: (confCanvas) ->\n    throw new Error(\"No selector defined\") if not confCanvas.selector?\n    $(confCanvas.selector).css({\"position\": \"relative\"})\n    @_CANVAS = d3.select(confCanvas.selector)\n      .append('svg')\n      .attr(\"fill\", confCanvas.bgcolor)\n      .attr('width', confCanvas.width)\n      .attr('height', confCanvas.height)\n    @_CLASS.tooltip = new M.tooltip.Main(@_CONF.canvas.selector)\n    @_CLASS.title = new M.title.Main(@_CANVAS)\n\n  renderAxis: (params) ->\n    line = @_CANVAS.append(\"line\")\n      .attr(\"stroke\", params.axis.color)\n      .attr(\"stroke-width\", params.axis.strokeWidth)\n    switch params.axis.orient\n      when 'bottom'\n        line\n          .attr(\"x1\", params.canvas.padding[0])\n          .attr(\"y1\", params.canvas.height-params.canvas.padding[1])\n          .attr(\"x2\", params.canvas.width-params.canvas.padding[0])\n          .attr(\"y2\", params.canvas.height-params.canvas.padding[1])\n      when \"top\"\n        line\n          .attr(\"x1\", params.canvas.padding[0])\n          .attr(\"y1\", params.canvas.padding[1])\n          .attr(\"x2\", params.canvas.width-params.canvas.padding[0])\n          .attr(\"y2\", params.canvas.padding[1])\n      when \"left\"\n        line\n          .attr(\"x1\", params.canvas.padding[0])\n          .attr(\"y1\", params.canvas.padding[1])\n          .attr(\"x2\", params.canvas.padding[0])\n          .attr(\"y2\", params.canvas.height-params.canvas.padding[1])\n      when \"right\"\n        line\n          .attr(\"x1\", params.canvas.width-params.canvas.padding[0])\n          .attr(\"y1\", params.canvas.padding[1])\n          .attr(\"x2\", params.canvas.width-params.canvas.padding[0])\n          .attr(\"y2\", params.canvas.height-params.canvas.padding[1])\n      else\n        throw new Error(\"Unknown orientation: \", params.axis.orient)\n\n  renderGrid: (params={\n    class: null\n    color: null\n    scale:  null\n    height: null\n    width:  null\n    padding:null\n    orient: null\n    trans:  null\n    label:  null\n    format: null\n  }) ->\n\n    grid = d3.svg.axis()\n      .scale(params.scale)\n      .orient(params.orient)\n      .tickSize(params.tickSize)\n\n    if params.ticks != \"auto\"\n      grid.ticks(params.ticks)\n\n    if params.format?\n      if params.ticks == \"auto\"\n        grid.ticks(d3.time.months.utc, 1)\n      else\n        grid.ticks(d3.time.months.utc, params.ticks)\n      grid.tickFormat(\n        d3.time.format(params.format)\n      )\n\n    ggrid = @_CANVAS\n      .append(\"g\")\n      .attr(\"transform\", params.trans)\n      .attr(\"class\", \"axis #{params.class}\")\n      .call(grid)\n\n    # TODO: remove @renderLabel(params)\n    @_CLASS.label = new M.label.Main(@_CANVAS)\n    @_CLASS.label.render(params)\n\n    ggrid.selectAll(\"line\")\n      .attr(\"stroke\", params.color)\n      .attr(\"stroke-width\", params.strokeWidth)\n\n    # Selecting the ticks only without the first one\n    ggrid.selectAll(\"line\")\n      .attr(\"stroke\", params.tickColor)\n      .attr(\"width-stroke\", params.tickWidth)\n\n    # Trick to hide the path around the graph\n    ggrid.selectAll(\"path\")\n      .style(\"display\", \"none\")\n\n    # Color of the text on axis\n    ggrid.selectAll(\"text\")\n      .attr(\"fill\", params.fontColor)\n      .attr(\"font-size\", params.fontSize)\n      .attr(\"font-weight\", params.fontWeight)\n\n  renderXGrid: ->\n    padding = @_CONF.canvas.padding\n    height = @_CONF.canvas.height\n    width = @_CONF.canvas.width\n    label = @_CONF.canvas.label.x\n    label.textAnchor = \"middle\"\n    label.orient = @_CONF.axis.x.orient\n    label.offset = @_CONF.canvas.label.x.offset\n    switch @_CONF.axis.x.orient\n      when 'bottom'\n        trans = \"translate(0, #{padding[1]})\"\n      when 'top'\n        trans = \"translate(0, #{height-padding[1]})\"\n      else\n        throw new Error(\"Unknown orientation: \", @_CONF.axis.x.orient)\n    tickSize = @_CONF.axis.x.tickSize\n    tickSize =  height-padding[1]*2 if tickSize == 'full'\n    params = {\n      class: \"x\"\n      height: @_CONF.canvas.height\n      width: @_CONF.canvas.width\n      scale: @_SCALE.x\n      ticks: @_CONF.axis.x.ticks\n      tickSize: tickSize\n      padding: padding\n      label: label\n      orient: @_CONF.axis.x.orient\n      trans: trans\n      tickColor: @_CONF.axis.x.tickColor\n      tickWidth: @_CONF.axis.x.tickWidth\n      color: @_CONF.axis.x.color\n      strokeWidth: @_CONF.axis.x.strokeWidth\n      format: @_CONF.axis.x.format\n      fontSize: @_CONF.axis.x.font.size\n      fontColor: @_CONF.axis.x.font.color\n      fontWeight: @_CONF.axis.x.font.weight\n    }\n    @renderGrid(params)\n\n  renderYGrid: ->\n    padding = @_CONF.canvas.padding\n    height = @_CONF.canvas.height\n    width = @_CONF.canvas.width\n    label = @_CONF.canvas.label.y\n    switch @_CONF.axis.y.orient\n      when 'left'\n        label.trans =\n          \"rotate(-90) translate(#{-height/2}, #{padding[0]+10})\"\n      when 'right'\n        trans = \"translate(#{width-padding[0]}, 0)\"\n        label.textAnchor = \"middle\"\n      else\n        throw new Error(\"Unknown orientation: \", @_CONF.axis.y.orient)\n\n    tickSize = @_CONF.axis.y.tickSize\n    tickSize = -width+padding[0]*2 if tickSize == 'full'\n\n    params = {\n      class: \"y\"\n      height: @_CONF.canvas.height\n      width: @_CONF.canvas.width\n      scale: @_SCALE.y\n      ticks: @_CONF.axis.y.ticks\n      tickSize: tickSize\n      padding: padding\n      label: label\n      orient: @_CONF.axis.y.orient\n      trans: trans\n      tickColor: @_CONF.axis.y.tickColor\n      tickWidth: @_CONF.axis.y.tickWidth\n      color: @_CONF.axis.y.color\n      strokeWidth: @_CONF.axis.y.strokeWidth\n      format: @_CONF.axis.y.format\n      fontSize: @_CONF.axis.y.font.size\n      fontColor: @_CONF.axis.y.font.color\n      fontWeight: @_CONF.axis.y.font.weight\n    }\n    @renderGrid(params)\n\n\n  renderPoints: ->\n    _scope  = @\n    _conf   = @_CONF\n    _canvas = @_CANVAS\n    _tooltipNode = @_CLASS.tooltip.getDOM().root\n    _tooltipShow = @_CLASS.tooltip.show\n    _tooltipHide = @_CLASS.tooltip.hide\n    _tooltipCallback = _conf.tooltip.callback\n    _tooltipTemplate = _conf.tooltip.template\n\n    if typeof(_tooltipCallback) == \"string\"\n      _tooltipCallback = @_CLASS.tooltip.getCallback(_tooltipCallback)\n    if typeof(_tooltipTemplate) == \"string\"\n      _tooltipTemplate = @_CLASS.tooltip.getTemplate(_tooltipTemplate)\n    scaleW = @_SCALE.x\n    scaleH = @_SCALE.y\n\n    series = @_CANVAS.selectAll(\".series\")\n      .data(@_SERIES).enter()\n        .append(\"g\")\n        .attr(\"class\", \"series\")\n        .attr(\"id\", (s, i)->\"#{i}\")\n        .attr(\"title\", (s)->s.name)\n\n    if _conf.canvas.render == 'line' or _conf.canvas.render == 'dotline'\n      valueline = d3.svg.line()\n        .interpolate(\"linear\")\n        .x((d)->scaleW(d.x))\n        .y((d)->scaleH(d.y))\n\n      series.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", (d)->valueline(d.data))\n        .attr('stroke', ((d, serieIndex)->\n          d.data[0].config.color #Take the first color\n        ))\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke-width\", _conf.line.stroke.width)\n\n    if _conf.canvas.render == 'dot' or _conf.canvas.render == 'dotline'\n      series.selectAll(\".circle\")\n        .data((d) -> d.data)\n        .enter().append(\"circle\")\n          .attr('cx', (d) -> scaleW(d.x))\n          .attr('cy', (d) -> scaleH(d.y))\n          .attr('data-x', (d) -> d.x)\n          .attr('data-y', (d) -> d.y)\n          .attr('data-color', (d) -> d.config.color)\n          .attr('r', ( (d) ->\n            d.config.r))\n          .attr('stroke',( (d) ->\n            if _conf.point.mode == 'empty'\n              d.config.color\n            else if _conf.point.mode == 'fill'\n              _conf.canvas.bgcolor\n            else\n              throw new Error(\"Unknown point mode '#{_conf.point.mode}'\")\n          ))\n          .attr('fill', ((d)->\n            if _conf.point.mode == 'empty'\n              _conf.canvas.bgcolor\n            else if _conf.point.mode == 'fill'\n              d.config.color\n            else\n              throw new Error(\"Unknown point mode '#{_conf.point.mode}'\")\n          ))\n          .attr('stroke-width', ( (d) ->\n            d.config?.stroke?.width ? _conf.point.stroke.width))\n          .on('mouseover', (d)->\n            effect = _conf.point.onMouseover\n            if typeof effect == 'string'\n              effect = M.effectsPoint[effect].onMouseover\n            effect(\n              canvas: _canvas\n              circleNode: this\n              data: d\n            )\n\n            # Data for the tooltip callback\n            data = _tooltipCallback(\n              format: _conf.tooltip.format\n              canvas: _canvas\n              tooltipNode: _tooltipNode\n              circleNode: this\n              data: d\n            )\n            _tooltipNode.html(_tooltipTemplate(data))\n            _tooltipShow(this,\n              {\n                canvas:\n                  width: _conf.canvas.width\n                  height: _conf.canvas.height\n                tooltip:\n                  alwaysInside: _conf.tooltip.alwaysInside\n              }, _tooltipNode, d)\n          )\n          .on('mouseout', (d) ->\n            effect = _conf.point.onMouseout\n            if typeof effect == 'string'\n              effect = M.effectsPoint[effect].onMouseout\n            effect(\n              canvas: _canvas\n              circleNode: this\n              data: d\n            )\n            _tooltipHide(_tooltipNode)\n          )\n\n    else\n      throw new Error(\"Unknown render value '#{_canvas.render}'\")\n\n\n  renderCrossValue: (params={\n    scale: null\n    canvas: null\n    confCanvas: null\n    confCrossV: null\n  }) ->\n    # We append the container at the begining\n    gbox = params.canvas.append(\"g\")\n      .style(\"opacity\", 0)\n    box = gbox.append(\"rect\")\n    text = gbox.append(\"text\")\n      .text(\"AgChartPile\")\n      .attr(\"font-size\", params.confCrossV.x.fontSize)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", params.confCrossV.x.fontColor)\n    textDim = text.node().getBBox()\n    box\n      .attr(\"fill\", params.confCrossV.x.color)\n      .attr(\"rx\", params.confCrossV.x.radius)\n      .attr(\"ry\", params.confCrossV.x.radius)\n\n    if params.confCrossV.x.show\n      timeoutUnmoved = null\n      params.canvas.on(\"mousemove.crossValue\", ->\n        gbox.transition().duration(300).style('opacity', 1)\n        clearTimeout(timeoutUnmoved)\n        eventX = d3.mouse(@)[0]\n\n        # Blocking the X value\n        if eventX < params.confCanvas.padding[0]\n          eventX = params.confCanvas.padding[0]\n        else if eventX > params.confCanvas.width-params.confCanvas.padding[0]\n          eventX = params.confCanvas.width-params.confCanvas.padding[0]\n\n        # Blocking the position of the pile\n        positionX = eventX\n        if eventX < params.confCanvas.padding[0]+textDim.width/2\n          positionX = params.confCanvas.padding[0]+textDim.width/2\n        else if eventX > params.confCanvas.width-params.confCanvas.padding[0]-textDim.width/2\n          positionX = params.confCanvas.width-params.confCanvas.padding[0]-textDim.width/2\n        text\n          .attr(\"y\", textDim.height-textDim.height*0.25) # Seems that we need to remove 25%\n                                                         # to have it centered. Auto magically\n                                                         # resolved !\n          .attr(\"x\", textDim.width/2)\n        box\n          .attr(\"width\", textDim.width)\n          .attr(\"height\", textDim.height)\n\n        valueX = params.scale.x.invert(eventX)\n        switch params.confCrossV.x.orient\n          when 'top'\n            eventY = params.confCanvas.padding[1]\n          when 'bottom'\n            eventY = params.confCanvas.height-params.confCanvas.padding[1]\n        text.text(params.confCrossV.x.format(valueX))\n        gbox.attr(\"transform\", \"translate(#{positionX-textDim.width/2}, #{eventY})\")\n        gbox.attr(\"cy\", d3.mouse(@)[1])\n\n        # Detect unmoved mouse\n        timeoutUnmoved = setTimeout(( ->\n          gbox.transition().duration(500).style('opacity', 0)\n        ), 2000)\n      )\n\n\n  renderCross: (params={\n    canvas: null\n    confCanvas: null\n    confCross: null\n  })->\n    padX = params.confCanvas.padding[0]\n    padY = params.confCanvas.padding[1]\n    offsetX = params.confCross.x.offset\n    offsetY = params.confCross.y.offset\n    width = params.confCanvas.width\n    height = params.confCanvas.height\n    _crossX = params.canvas.append(\"line\")\n      .attr(\"class\", \"crossX\")\n      .attr(\"x1\", -width).attr(\"y1\", padY)\n      .attr(\"x2\", -width).attr(\"y2\", height-padY)\n      .attr(\"stroke\", params.confCross.x.color)\n      .attr(\"stroke-width\", params.confCross.x.stroke)\n    _crossY = params.canvas.append(\"line\")\n      .attr(\"class\", \"crossY\")\n      .attr(\"x1\", padX).attr(\"y1\", -height)\n      .attr(\"x2\", width-padX).attr(\"y2\", -height)\n      .attr(\"stroke\", params.confCross.y.color)\n      .attr(\"stroke-width\", params.confCross.y.stroke)\n    timeoutUnmoved = null\n    params.canvas.on(\"mousemove.tooltip\", (d)->\n      clearTimeout(timeoutUnmoved)\n      _crossY.transition().style('opacity', 1)\n      _crossX.transition().style('opacity', 1)\n      eventX = d3.mouse(@)[0]\n      eventY = d3.mouse(@)[1]\n      if params.confCross.x.show and\n      eventX >= padX+offsetX and\n      eventX <= width-padX+offsetX\n        _crossX\n          .attr(\"x1\", eventX-offsetX)\n          .attr(\"x2\", eventX-offsetX)\n      if params.confCross.y.show and\n      eventY >= padY+offsetY and\n      eventY <= height-padY+offsetY\n        _crossY\n          .attr(\"y1\", eventY-offsetY)\n          .attr(\"y2\", eventY-offsetY)\n      # Detect unmoved mouse\n      timeoutUnmoved = setTimeout(( ->\n        _crossY.transition().duration(500).style('opacity', 0)\n        _crossX.transition().duration(500).style('opacity', 0)\n      ), 2000)\n    )\n\n  renderLogo: (params) ->\n    if params.y == 'bottom'\n      params.y = @_CONF.canvas.height-@_CONF.canvas.padding[1]-params.height\n    params.y = @_CONF.canvas.padding[1] if params.y == 'top'\n    if params.x == 'right'\n      params.x = @_CONF.canvas.width-@_CONF.canvas.padding[0]-params.width\n    params.x = @_CONF.canvas.padding[0] if params.y == 'left'\n\n    @_CANVAS\n      .append(\"image\")\n      .attr(\"width\", params.width)\n      .attr(\"height\", params.height)\n      .attr(\"x\", params.x)\n      .attr(\"y\", params.y)\n      .attr(\"opacity\", params.opacity)\n      .attr(\"id\", \"logo\")\n      .attr(\"xlink:href\",@_CONF.logo.url)\n\n  render: ->\n    @_CANVAS = @createSVG() if not @_CANVAS?\n    @renderLogo(\n      opacity: @_CONF.logo.opacity\n      url: @_CONF.logo.url\n      width: @_CONF.logo.width\n      height: @_CONF.logo.height\n      x: @_CONF.logo.x\n      y: @_CONF.logo.y\n    )\n    @renderCross(\n      canvas: @_CANVAS\n      confCanvas: @_CONF.canvas\n      confCross: @_CONF.canvas.cross\n    )\n    @renderXGrid()\n    @renderYGrid()\n    @renderAxis(\n      canvas: @_CONF.canvas\n      axis: @_CONF.axis.x\n    )\n    @renderAxis(\n      canvas: @_CONF.canvas\n      axis: @_CONF.axis.y\n    )\n    @renderCrossValue(\n      scale: @_SCALE\n      canvas: @_CANVAS\n      confCanvas: @_CONF.canvas\n      confCrossV: @_CONF.canvas.crossValue\n    )\n\n    @renderPoints() # Depends on axis and tooltip\n\n    @_CLASS.title.render(\n      title: @_CONF.canvas.title\n      padding: @_CONF.canvas.padding\n    )\n\n    @renderPluginMenu(\n      iconsFolder: @_CONF.pluginsIconsFolder\n      selector: @_CONF.canvas.selector\n      confPlugins: @_CONF.plugins\n    )\n\n    if @_CONF.legends.show\n      @renderLegends()\n\n\n  renderLegends: ->\n    _series = @_SERIES\n    selector = @_CONF.canvas.selector\n    rectWidth = 10\n    rectHeight = 10\n    textWidth = 50\n    rectMargin = 5\n\n    # Width space available\n    widthSpace = @_CONF.canvas.width-@_CONF.canvas.padding[0]*2\n\n    posX = @_CONF.canvas.padding[0]\n    posY = @_CONF.canvas.height-12\n\n    currentX = 0\n    currentY = 15\n    legPanel = @_CANVAS.append(\"g\")\n      .attr(\"transform\", \"translate(#{posX}, #{posY})\")\n    for i, serie of @_SERIES\n      @_CANVAS.attr(\"height\", @_CONF.canvas.height+currentY)\n      i = parseInt(i)\n      color = serie.data[0].config.color\n      text = serie.name\n      if @_CONF.legends.format?\n        text = @_CONF.legends.format(text)\n      legend = legPanel.append(\"g\")\n        .attr(\"transform\", \"translate(#{currentX}, #{currentY})\")\n        .style(\"cursor\", \"pointer\")\n        .attr(\"data-serieIndex\", i)\n        .attr(\"data-hide\", \"false\")\n      rect = legend.append(\"rect\")\n        .attr(\"width\", rectWidth)\n        .attr(\"height\", rectHeight)\n        .attr(\"fill\", color)\n        .attr(\"stroke\", \"#afafaf\")\n        .attr(\"stroke-width\", \"1\")\n        .attr(\"rx\", 5)\n        .attr(\"ry\", 5)\n      legend.append(\"text\")\n        .attr(\"x\", rectMargin+rectWidth)\n        .attr(\"y\", rectHeight-1)\n        .attr(\"fill\", color)\n        .attr(\"font-size\", 10)\n        .text(text)\n      if currentX+rectWidth+textWidth+\n      rectMargin > widthSpace-rectWidth-textWidth-rectMargin\n        currentX = 0\n        currentY += 15\n        # Update canvas height\n      else\n        currentX += rectWidth+textWidth+rectMargin\n\n      legend.on(\"click\", ()  ->\n        opacity = $(this).css(\"opacity\")\n        serie = this.getAttribute(\"data-serieIndex\")\n        hide = this.getAttribute(\"data-hide\")\n        if hide == \"false\"\n          $(this).fadeTo(100, 0.3)\n          $(selector).find(\".series#\"+serie)[0].setAttribute(\"data-hide\", \"true\")\n          this.setAttribute(\"data-hide\", \"true\")\n        else\n          $(this).fadeTo(100, 1)\n          $(selector).find(\".series#\"+serie)[0].setAttribute(\"data-hide\", \"false\")\n          this.setAttribute(\"data-hide\", \"false\")\n        $(selector).find(\".series#\"+serie).toggle()\n      )\n\n  renderPluginMenu: (params={\n    selector: null\n    iconsFolder: 'icons'\n    confPlugins: {}\n  }) ->\n    pluginsMenu = $(\"<div/>\", {\n      id: \"pluginsMenu\"\n    }).appendTo(params.selector)\n    pluginsMenu.css({\n      \"position\": \"absolute\"\n      \"left\": @_CONF.canvas.width+1\n      \"top\": \"0px\"\n      \"opacity\": 0.1\n    })\n    pluginsMenu.on(\"mouseover.menuPlugin\", ()->\n      pluginsMenu.animate({opacity: 1}, 10))\n    pluginsMenu.on(\"mouseout.menuPlugin\", ()->\n      pluginsMenu.animate({opacity: 0.1}, 10))\n\n    for plugin of params.confPlugins\n      if params.confPlugins[plugin].enable\n        icon = $(\"<img/>\",{\n          src: \"#{params.iconsFolder}/#{plugin}.png\"\n          width: \"30px\"\n        }).appendTo(pluginsMenu)\n        icon.css({cursor: \"pointer\"})\n        callback = @plugins[plugin].onClick\n        context = @\n        icon.click(-> callback(context, params.selector, params.confPlugins[plugin]))\n\n\n  plugins:\n    exportation:\n      onClick: (context, selector, conf) ->\n        # Replace logo by copyright text\n        image = $(selector).find(\"image#logo\").remove()\n        text = context._CANVAS.append(\"text\")\n          .attr(\"fill\", conf.copyright.color)\n          .attr(\"font-size\", conf.copyright.fontSize+\"px\")\n          .text(conf.copyright.text)\n        width = context._CONF.canvas.width\n        height = context._CONF.canvas.height\n        textDim = text.node().getBBox()\n        pX = width-context._CONF.canvas.padding[0]-10\n        pY = height-context._CONF.canvas.padding[1]-3\n        text.attr(\"text-anchor\", \"end\")\n        text.attr(\"transform\", \"translate(#{pX}, #{pY})\")\n\n        # Converting the SVG to a canvas\n        svg = $(selector).find(\"svg\")[0]\n        svg_xml = (new XMLSerializer()).serializeToString(svg)\n        canvas = document.createElement('canvas')\n        $(\"body\").after(canvas)\n        canvg(canvas, svg_xml)\n        $(canvas).remove()\n\n        # Convert canvas to PNG\n        img = canvas.toDataURL(\"image/png\")\n\n        # Internet explorer can't save data URI scheme\n        ua = window.navigator.userAgent\n        msie = ua.indexOf(\"MSIE \")\n        if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./))\n          console.log \"Internet explorer detected\"\n          window.winIE = win = window.open()\n          win.document.body.innerHTML = \"<center><img src='\"+img+\"'>\"+\n            \"</img><br>Please right click on the image and choose 'Save image as...'</center>\"\n          win.document.close()\n          #setTimeout('window.winIE.document.execCommand(\"SaveAs\")', 1000)\n        else\n          a = document.createElement('a')\n          a.href = img\n          a.download = \"agflow.png\"\n          $(\"body\").append(a)\n          a.click()\n\n        # Trick: we need to re-render the logo\n        context.renderLogo(\n          opacity: context._CONF.logo.opacity\n          url: context._CONF.logo.url\n          width:context._CONF.logo.width\n          height: context._CONF.logo.height\n          x: context._CONF.logo.x\n          y: context._CONF.logo.y\n        )\n        text.remove()\n","module.exports = exp = {}\n\nexp.Main = class Main\n  constructor: (svg) ->\n    @_LABEL = svg.append(\"text\")\n\n  getDOM: ->\n    return {root: @_LABEL}\n\n  render: (params) ->\n    return if not params?\n    width   = params.width\n    height  = params.height\n    padding = params.padding\n    offset  = params.label.offset || 0\n\n    @_LABEL\n      .attr(\"fill\", params.label.color)\n      .attr(\"class\", \"label #{params.class}\")\n      .attr(\"font-size\", params.label.size+\"px\")\n      .attr(\"text-anchor\", params.label.textAnchor)\n      .text(params.label.text)\n\n    textDim = @_LABEL.node().getBBox()\n\n    switch params.orient\n      when 'bottom'\n        trans = \"translate(#{width/2},\n          #{height-padding[1]+textDim.height+offset})\"\n      when 'top'\n        trans = \"translate(#{width/2}, #{height-2})\"\n      when 'left'\n        trans = \"translate(#{padding[0]}, 0)\"\n      when 'right'\n        trans = \"translate(#{width-padding[0]}, #{padding[1]/2})\"\n\n    @_LABEL.attr(\"transform\", trans)\n","# Render the title of the chart with specific parameters\nmodule.exports = exp = {}\nexp.Main = class Main\n  constructor: (svg) ->\n    @boxTitle   = svg.append(\"g\")\n    @boxText    = @boxTitle.append(\"text\")\n    @boxBorder  = @boxTitle.append(\"rect\")\n\n  getDOM: ->\n    return {\n      root:   @boxTitle\n      border: @boxBorder\n      text:   @boxText\n    }\n\n  render: (params) ->\n    posX = params.title.position.x\n    posY = params.title.position.y\n    @boxTitle\n    @boxText = @boxTitle\n      .attr(\"transform\", \"translate(#{posX},#{posY})\")\n      .append(\"text\")\n        .attr(\"class\", \"chart-title\")\n        .attr(\"fill\", params.title.color)\n        .attr(\"font-size\", params.title.size)\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"font-family\", params.title.fontFamily)\n        .text(params.title.text)\n    textDim = @boxText.node().getBBox()\n    @boxText\n      .attr(\"x\", params.title.border.padding[0])\n      .attr(\"y\", textDim.height-params.title.border.padding[1]-2)\n    if params.title.text\n      @boxBorder\n        .attr(\"width\", textDim.width+params.title.border.padding[0]*2)\n        .attr(\"height\", textDim.height+params.title.border.padding[1]*2)\n        .attr(\"ry\", params.title.border.radius)\n        .attr(\"rx\", params.title.border.radius)\n        .attr(\"stroke\", params.title.border.color)\n","# Render the tooltip and access to its methods to display/hide it\nmodule.exports = exp = {}\n\nexp.Main = class Main\n  constructor: (selector) ->\n    if not @_TOOLTIP?\n      @_TOOLTIP = d3.select(selector).append(\"div\")\n        .attr('class', 'tooltip')\n        .style('opacity', 0)\n        .style('left', 0)\n        .style('top', 0)\n\n  getDOM: () ->\n    return {root: @_TOOLTIP}\n\n  show: (context, conf, tooltipNode, d) ->\n    tooltipNode.attr(\"width\", 200).attr(\"height\", 100)\n    eventX = d3.mouse(context)[0]\n    eventY = d3.mouse(context)[1]\n    left = eventX+d.config.stroke.width\n    top = eventY+d.config.stroke.width\n    if conf.tooltip.alwaysInside\n      if eventX > conf.canvas.width/2.0\n        widthTooltip = parseFloat(\n          tooltipNode.style('width').replace(\"px\", ''))\n        left = eventX-d.config.stroke.width-\n          widthTooltip\n      if eventY > conf.canvas.height/2.0\n        heightTooltip = parseFloat(\n          tooltipNode.style('height').replace(\"px\", ''))\n        top = eventY-d.config.stroke.width-\n          heightTooltip\n    tooltipNode\n      .style(\"left\", left+'px')\n      .style(\"top\", top+'px')\n      .transition().duration(200).style(\"opacity\", 0.9)\n\n  hide: (tooltipNode) ->\n    tooltipNode.transition()\n      .duration(500).style(\"opacity\", 0)\n\n  getTemplate: (str) -> return @_templates[str]\n\n  getCallback: (str) -> return @_callbacks[str]\n\n  _templates:\n    singlePoint: (data) ->\n      html = \"<h1>#{data[0].title}</h1>\"\n      html += \"<div class='serie' id='0'>#{data[0].x} : #{data[0].y}\"+\n        \"<div class='swatch'\"+\n          \"style='background-color: #{data[0].color}'></div>\"+\n      \"</div>\"\n\n    multipleVertical: (data) ->\n      html = \"<h1>#{data[0].x}</h1>\"\n      for d, i in data\n        if not d.hide\n          html += \"<div class='serie' id='#{i}'>#{d.serieName} : #{d.y}\"+\n            \"<div class='swatch'\"+\n              \"style='background-color: #{d.color}'></div>\"+\n          \"</div>\"\n      html\n    multipleVerticalInverted: (data) ->\n      html = \"<h1>#{data[0].x}</h1>\"\n      for d, i in data\n        if not d.hide\n          html += \"<div class='serie' id='#{i}'>#{d.serieName}: #{d.y}\"+\n            \"<div class='swatch'\"+\n              \"style='background-color: #{d.color}'></div>\"+\n          \"</div>\"\n      html\n\n  _callbacks:\n    singlePoint:\n      (params) ->\n        _circleNode = params.circleNode\n        x = parseFloat(_circleNode.getAttribute('data-x'))\n        x = params.format.x(x) if params.format?.x?\n        [{\n          color: params.data.config.color\n          serieName: params.circleNode.parentNode.getAttribute(\"title\")\n          x: x\n          y: params.data.y.toFixed(2)\n          hide: node.parentNode.getAttribute(\"data-hide\") == \"true\"\n        }]\n    multipleVertical:\n      (params) ->\n        # Get all same cx value, take the fill color to\n        # draw watch and show some information\n        _circleNode = params.circleNode\n        cx = _circleNode.getAttribute('cx')\n        x = parseFloat(_circleNode.getAttribute('data-x'))\n        if params.format?.x?\n          x = params.format.x(x)\n\n        title = parseInt(_circleNode.parentNode.getAttribute('title'))\n        if params.format?.title?\n          title = params.format.title(title)\n\n        res = []\n        $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n          res.push {\n            title: title\n            serieName: node.parentNode.getAttribute(\"title\")\n            color: node.getAttribute(\"data-color\")\n            y: parseFloat(node.getAttribute(\"data-y\")).toFixed(2)\n            x: x\n            hide: node.parentNode.getAttribute(\"data-hide\") == \"true\"\n          })\n        res\n\n    multipleVerticalInverted:\n      (params) ->\n        # Get all same cx value, take the fill color to\n        # draw watch and show some information\n        _circleNode = params.circleNode\n        cx = _circleNode.getAttribute('cx')\n        x = parseFloat(_circleNode.getAttribute('data-x'))\n        if params.format?.x?\n          x = params.format.x(x)\n        title = parseInt(_circleNode.parentNode.getAttribute('title'))\n        if params.format?.title?\n          title = params.format.title(title)\n        res = []\n        $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n          serieName = parseInt(node.parentNode.getAttribute(\"title\"))\n          if params.format?.serie?\n            serieName = params.format.serie(serieName)\n          res.push {\n            title: title\n            serieName: serieName\n            color: node.getAttribute(\"data-color\")\n            y: parseFloat(node.getAttribute(\"data-y\")).toFixed(2)\n            x: x\n            hide: node.parentNode.getAttribute(\"data-hide\") == \"true\"\n          })\n        res\n","module.exports = exp = {}\ntools = require 'utils/tools'\n\nexp.Main = class Main\n  constructor: (userConfig) -> tools.updateObject(@defaultConfig,userConfig)\n\n  # Get the configuration object\n  get: () -> @defaultConfig\n\n  # Default configuration for agchart\n  defaultConfig:\n    tooltip:\n      template: \"singlePoint\"\n      format:\n        title: null\n        serie: null\n        x: null\n        y: null\n      callback: \"singlePoint\"\n      alwaysInside: true\n    canvas:\n      scale:\n        x:\n          nice: false\n          padding: [10, 10] # NOT WORKING YET\n        y:\n          nice: true\n          padding: [10, 10] # NOT WORKING YET\n      bgcolor: \"#FFFFFF\"\n      render: \"dot\" # dot, line\n      title:\n        text: \"\"\n        color: \"#2f2f2f\"\n        size: 24\n        fontFamily: \"arial\"\n        border:\n          radius: 2\n          color: \"#3f3f3f\"\n          padding: [8,1]\n        position:\n          x: 35\n          y: 20\n      label:\n        x:\n          text: null\n          size: 10\n          color: \"#7f7f7f\"\n          offset: 15\n        y:\n          text: null\n          size: 10\n          color: \"#7f7f7f\"\n          offset: 0\n      selector: null\n      width: 600.0\n      height: 400.0\n      padding: [0,0] #left/right, bottom/top\n      cross:\n        x:\n          show: false\n          color: 'black'\n          stroke: 1\n          offset: 0\n        y:\n          show: false\n          color: 'black'\n          stroke: 1\n          offset: 0\n      crossValue:\n        x:\n          orient: 'bottom' # Top not implemented\n          show: true\n          color: '#0971b7'\n          fontColor: '#ffffff'\n          fontSize: 12\n          format: (d) ->\n            da = d.toString().split(\" \")[2]\n            m = d.toString().split(\" \")[1]\n            y = d.toString().split(\" \")[3].substring(2)\n            \"#{da} #{m} #{y}\"\n          radius: 5\n        y:\n          show: true\n          color: 'white'\n    logo:\n      url: \"agflow-logo.svg\"\n      width: 100\n      height: 50\n      x: 'right'\n      y: 'bottom'\n      opacity: 0.5\n    line:\n      stroke:\n        width: 2\n    point:\n      onMouseover: \"singlePoint\"\n      onMouseout: \"singlePoint\"\n      r: 4\n      mode: 'empty' # empty, fill\n      color: \"munin\"\n      stroke:\n        width: 1\n    axis:\n      x:\n        format: null\n        domainMargin: 5\n        ticks: \"auto\"\n        tickSize: null\n        orient: \"bottom\" # bottom, top\n        tickColor: \"#f5f5f5\"\n        tickWidth: 2\n        strokeWidth: 1\n        color: \"#2b2e33\" # THe color of the y axis\n        font:\n          color: \"#2b2e33\"\n          size: 10\n          weight: \"normal\"\n      y:\n        format: null\n        domainMargin: 5\n        ticks: \"auto\"\n        tickSize: null\n        orient: \"left\" # left, right\n        tickColor: \"#f5f5f5\"\n        tickWidth: 2\n        strokeWidth: 1\n        color: \"#2b2e33\" # The color of the x axis\n        font:\n          color: \"#2b2e33\"\n          size: 10\n          weight: \"normal\"\n    legends:\n      show: true\n      format: null\n    pluginsIconsFolder: \"icons\"\n    plugins:\n      exportation:\n        enable: true\n        copyright:\n          text: \"(c) AgFlow 2014\"\n          color: \"#9f9f9f\"\n          fontSize: 12\n","module.exports = exp = {}\n\n# Effects for the events\nexp.singlePoint =\n  onMouseover: (params) ->\n    _circleNode = params.circleNode\n    curStrokeWidth =\n      parseFloat( _circleNode.getAttribute(\"stroke-width\") )\n    _circleNode.setAttribute(\"stroke-width\", curStrokeWidth*2)\n  onMouseout: (params) ->\n    _circleNode = params.circleNode\n    curStrokeWidth =\n      parseFloat( _circleNode.getAttribute(\"stroke-width\") )\n    _circleNode.setAttribute(\"stroke-width\", curStrokeWidth/2)\n\nexp.multipleVertical =\n  onMouseover:  (params) ->\n    _circleNode = params.circleNode\n    cx = _circleNode.getAttribute('cx')\n    strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))*2\n    $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n      $(node).attr(\"stroke-width\", strokeWidth)\n    )\n  onMouseout: (params) ->\n    _circleNode = params.circleNode\n    cx = _circleNode.getAttribute('cx')\n    strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))/2\n    $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n      $(node).attr(\"stroke-width\", strokeWidth)\n    )\n\nexp.multipleVerticalInverted =\n  onMouseover:  (params) ->\n    _circleNode = params.circleNode\n    cx = _circleNode.getAttribute('cx')\n    strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))*2\n    $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n      $(node).attr(\"stroke-width\", strokeWidth)\n      fill = $(node).attr(\"fill\")\n      stroke = $(node).attr(\"stroke\")\n      $(node).attr(\"stroke\", fill)\n      $(node).attr(\"fill\", stroke)\n    )\n\n  onMouseout: (params) ->\n    _circleNode = params.circleNode\n    cx = _circleNode.getAttribute('cx')\n    strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))/2\n    $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n      $(node).attr(\"stroke-width\", strokeWidth)\n      fill = $(node).attr(\"fill\")\n      stroke = $(node).attr(\"stroke\")\n      $(node).attr(\"stroke\", fill)\n      $(node).attr(\"fill\", stroke)\n    )\n","module.exports = exp = {}\n\nagchart = require 'agchart'\ntime = require 'utils/time'\n\n# Just for the purpose of the example\ngenData = (len, inter=1) ->\n  els = []\n  for i in [0..len-1] by inter\n    els.push {x: i*1000, y: Math.random()*100}\n  els\n\ngenDataFunc = (len, inter=1, func) ->\n  els = []\n  for i in [0..len-1] by inter\n    els.push {x: i*1000, y: func(i)*10+50}\n  els\n\nexp.run = ->\n  # TODO: finish this module if needed (later on)\n  t = new time.Main(\n    lang: 'en'\n  )\n\n  series = []\n  series.push {\n    name: \"Serie 1\"\n    data: genDataFunc(24*3600*120, 36*3600, (d) -> Math.cos(d)*10)\n    config:\n      stroke: {width: 1}\n  }\n  series.push {\n    name: \"Serie 2\"\n    data: genDataFunc(24*3600*120, 36*3600*2, Math.tan)\n    config:\n      color: \"#ff0001\"\n      stroke: {width: 1}\n  }\n  series.push {\n    name: \"Serie 3\"\n    data: genDataFunc(24*3600*120, 48*3600, Math.sin)\n    config:\n      #color: \"#00fffe\"\n      stroke: {width: 1}\n  }\n\n  for i in [0..20]\n    series.push {\n      name: \"Serie \"+(i+3)\n      data: [{x: i*1000, y: i*10}]\n    }\n\n  tooltipFormat = (d) ->\n    date = new Date(d)\n    formatDate = d3.time.format(\"%b '%y\")\n    formatDate(date)\n\n  # singlePoint, multipleVertical, multipleVerticalInverted\n  mode = \"multipleVerticalInverted\"\n  #mode = \"multipleVertical\"\n  #mode = \"singlePoint\"\n\n  agChart = new agchart.Main(\n    config:\n      canvas:\n        scale:\n          x:\n            nice: true\n        render: 'dotline' # dot, line, dotline\n        width: 900.0\n        height: 400.0\n        title:\n          color: \"#4f4f4f\"\n          size: 16\n          text: \"Helo\"\n          border:\n            padding: [8,1]\n        label:\n          x:\n            text: \"Some label X\"\n            size: 10\n            color: \"#7f7f7f\"\n          y:\n            text: \"Some label Y\"\n            size: 10\n            color: \"#7f7f7f\"\n        selector: '#chart1'\n        padding: [50,50]\n        cross:\n          x:\n            show: true\n            color: \"#44A0FF\"\n          y:\n            show: true\n            color: \"#FFA044\"\n        crossValue:\n          x:\n            show: true\n      logo:\n        url: \"agflow-logo.png\"\n        width: 100\n        height: 50\n        x: 'right'\n        y: 'bottom'\n        opacity: 0.1\n      tooltip:\n        template: mode\n        callback: mode\n        format:\n          x: tooltipFormat\n      line:\n        stroke: {width: 1}\n      point:\n        onMouseover: mode\n        onMouseout: mode\n        mode: 'fill'\n        r: 4\n        color: 'agflow' # Color or palette name\n        stroke: {width: 1, color: null}\n      axis:\n        y:\n          ticks: 5\n          tickSize: \"full\"\n          tickColor: \"#ebebeb\"\n          tickWidth: 2\n          orient: \"right\"\n          font:\n            weight: \"bold\"\n        x:\n          ticks: 1\n          orient: \"bottom\"\n          tickWidth: 2\n          tickColor: \"#ebebeb\"\n          format: \"%b\"\n          tickSize: \"full\"\n      legends:\n        show: true\n      pluginsIconsFolder: \"icons\"\n    series: series\n  )\n  agChart.render()\n","module.exports = exp = {}\n\n# Computes the padding automatically to display correctly the\n# graph and dots\nexp.computePadding = computePadding = (confPoint) ->\n  pad = confPoint.r+confPoint.stroke.width/2.0\n  [pad,pad]\n","module.exports = exp = {}\n\nexp.computeDomain = getDomain = (series) ->\n  maxX = maxY = Number.MIN_VALUE\n  minX = minY = Number.MAX_VALUE\n  for serie in series\n    for point in serie.data\n      maxX = point.x if point.x > maxX\n      minX = point.x if point.x < minX\n      maxY = point.y if point.y > maxY\n      minY = point.y if point.y < minY\n  {minX: minX, maxX: maxX, minY: minY, maxY: maxY}\n\n# Fix the domain if minX == maxX and same for Y\nexp.fixDomain = fixDomain = (args) ->\n  domain   = args.domain\n  confAxis = args.confAxis\n  if domain.maxX == domain.minX\n    domain.maxX += confAxis.x.domainMargin\n    domain.minX -= confAxis.x.domainMargin\n  if domain.maxY == domain.minY\n    domain.maxY += confAxis.y.domainMargin\n    domain.minY -= confAxis.y.domainMargin\n","module.exports = exp = {}\n\nexp.Main = class Main\n  constructor: (palette) ->\n    _palettes = @palettes()\n    @_PALETTE = _palettes[palette]\n    @_INDEX = 0\n\n  isDefined: ->\n    if @_PALETTE?\n      return true\n    return false\n\n  color: (i) ->\n    # Get the next color\n    return @_PALETTE[i%@_PALETTE.length]\n\n  palettes: ->\n    schemes = {}\n    schemes.spectrum14 = ['#ecb796','#dc8f70','#b2a470','#92875a',\n      '#716c49','#d2ed82','#bbe468','#a1d05d','#e7cbe6','#d8aad6',\n      '#a888c2','#9dc2d3','#649eb9', '#387aa3'].reverse()\n\n    schemes.spectrum2000 = ['#57306f','#514c76','#646583','#738394',\n      '#6b9c7d','#84b665','#a7ca50','#bfe746','#e2f528','#fff726',\n      '#ecdd00','#d4b11d','#de8800','#de4800','#c91515','#9a0000',\n      '#7b0429','#580839','#31082b']\n\n    schemes.spectrum2001 = ['#2f243f','#3c2c55','#4a3768','#565270',\n      '#6b6b7c','#72957f','#86ad6e','#a1bc5e','#b8d954','#d3e04e',\n      '#ccad2a','#cc8412','#c1521d','#ad3821','#8a1010','#681717',\n      '#531e1e','#3d1818','#320a1b']\n\n    schemes.classic9 = ['#423d4f','#4a6860','#848f39','#a2b73c',\n      '#ddcb53','#c5a32f','#7d5836','#963b20','#7c2626','#491d37',\n      '#2f254a'].reverse()\n\n    schemes.httpStatus = {\n      503: '#ea5029', 502: '#d23f14', 500: '#bf3613'\n      410: '#efacea',409: '#e291dc',403: '#f457e8',408: '#e121d2',401: '#b92dae'\n      405: '#f47ceb',404: '#a82a9f',400: '#b263c6',301: '#6fa024',302: '#87c32b'\n      307: '#a0d84c',304: '#28b55c',200: '#1a4f74',206: '#27839f',201: '#52adc9'\n      202: '#7c979f',203: '#a5b8bd',204: '#c1cdd1'}\n\n    schemes.colorwheel = ['#b5b6a9','#858772','#785f43','#96557e',\n      '#4682b4','#65b9ac','#73c03a','#cb513a'].reverse()\n\n    schemes.cool = ['#5e9d2f','#73c03a','#4682b4','#7bc3b8','#a9884e',\n      '#c1b266','#a47493','#c09fb5']\n\n    schemes.munin = ['#00cc00','#0066b3','#ff8000','#ffcc00','#330099',\n      '#990099','#ccff00','#ff0000','#808080','#008f00','#00487d',\n      '#b35a00','#b38f00','#6b006b','#8fb300','#b30000','#bebebe',\n      '#80ff80','#80c9ff','#ffc080','#ffe680','#aa80ff','#ee00cc',\n      '#ff8080','#666600','#ffbfff','#00ffcc','#cc6699','#999900']\n\n    schemes.paired = [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\n        \"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n\n    schemes.agflow = [\"#0099ef\",\"#ff009d\",\"#56b501\",\"#ffee52\",\"#a34100\",\"#0018ef\",\"#ff89d2\",\"#6ee801\",\"#ef0018\",\"#ffa468\",\"#00efd7\",\"#b3006e\",\"#aefe66\",\"#ed7446\",\"#572200\",\"#0010a3\",\"#326901\"]\n    return schemes\n","module.exports = exp = {}\nM = {\n  domain: require 'utils/domain'\n}\n\n# Computes D3JS Scales for X and Y\nexp.computeScales = computeScales = (args)->\n  _axis   = args.confAxis\n  _domain = args.domain\n  _canvas = args.confCanvas\n  _pad    = _canvas.padding\n\n  # WARN: care we changed from width to x and from height to y !\n  scales = {x: d3.scale.linear(), y: d3.scale.linear()}\n\n  scales.x = d3.time.scale.utc() if _axis.x.format?\n  scales.x.domain([_domain.minX,_domain.maxX]).range([_pad[0], _canvas.width-_pad[0]])\n  scales.x.nice() if _canvas.scale.x.nice\n\n  scales.y = d3.time.scale() if _axis.y.format?\n  scales.y.domain([_domain.minY,_domain.maxY]).range([_canvas.height-_pad[1], _pad[1]])\n  scales.y.nice()if _canvas.scale.y.nice\n\n  return scales\n\n","module.exports = exp = {}\n\nexp.Main = class Main\n  constructor:(params={}) ->\n    @_CONF =\n      lang: params.lang ? 'enl'\n\n    @_DATE = new Date()\n    @_TIMESTAMP = @_DATE.getTime()\n    @_MONTHSNAME = {}\n    @_MONTHSNAME.en = ['Jan','Feb','Mar','Apr','May','Jun',\n      'Jul','Aug','Sep','Oct','Nov','Dec']\n    @_MONTHSNAME.enl = ['January','February','March','April','May','June',\n      'July','August','September','October','November','December']\n    @_MONTHSNAME.fr = ['Jan','Fév','Mar','Avr','Mai','Juin',\n      'Juil','Août','Sep','Oct','Nov','Déc']\n    @_MONTHSNAME.frl = ['Janvier','Février','Mars','Avril','Mai','Juin',\n      'Juil','Août','Septembre','Octobre','Novembre','Décembre']\n\n  monthsName: ->\n    @_MONTHSNAME[@_CONF.lang]\n\n  getMonth: ->\n    @monthsName()[@_DATE.getMonth()]\n  getDay: ->\n    @_DATE.getDay()\n  getFullDate: ->\n    @_DATE.getDay()+\" \"+@getMonth()+\" \"+@_DATE.getYear()+\" \"+\n      @_DATE.getHours()+\":\"+@_DATE.getMinutes()\n\n\n  getDate: ->\n    return @_DATE\n\n  setTimestamp: (t) ->\n    return @_TIMESTAMP if not t?\n    @_DATE = new Date(parseInt(t)*1000)\n    @_TIMESTAMP = parseInt(t)\n\n","module.exports = exp = {}\n\n\n# Update the obj1 with the obj2\nexp.updateObject = updateObject = (obj1, obj2, replace=true) ->\n  # Check if the obj is a node.\n  isNode = (obj) ->\n    if obj?[\"0\"]?.nodeName? then true else false\n\n  update = (obj1,obj2, replace=true) ->\n    if obj2?\n      for k of obj2\n        if isNode(obj2[k]) # We copy the node as it is\n          obj1[k] = obj2[k][0] ? obj1[k][0]\n        else if typeof obj2[k] == 'object'\n          obj1[k] = {} if not obj1[k]?\n          update obj1[k], obj2[k], replace\n        else\n          if replace\n            obj1[k] = obj2[k] ? obj1[k]\n          else\n            obj1[k] = obj1[k] ? obj2[k]\n    return obj1\n  update(obj1, obj2, replace)\n\n\n# Prepare the series for the chart by adding\n# some configuration options to individual points\nexp.prepareSeries = prepareSeries = (args) ->\n  throw new Error(\"No series defined, #{args.series}\"+\n    \"should be an array of objects\") if not args.series?.length?\n  throw new Error(\"At least one serie must be defined\") if args.series.length < 1\n  for serie, i in args.series\n    for point in serie.data\n      point.serie = i\n      point.config = { color: args.confPoint.color }\n      if args.palette.isDefined() # Set the palette color\n        point.config.color = args.palette.color(i)\n      if serie.config?.color? # Override by specific serie color\n        point.config.color = serie.config.color\n      point.config.r = serie.config?.r || args.confPoint.r\n      point.config.stroke = { width: args.confPoint.stroke.width }\n      if serie.config?.stroke?.width? # Override by specific stroke width\n        point.config.stroke.width = serie.config.stroke.width\n  args.series\n"]}