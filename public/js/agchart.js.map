{"version":3,"file":"public/js/agchart.js","sources":["app/agchart.coffee","app/initialize.coffee","app/utils/palette.coffee","app/utils/time.coffee"],"names":[],"mappings":"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","sourcesContent":["palette = require 'utils/palette'\n\nmodule.exports = exp = {}\n\nexp.Main = class Main\n  constructor: (args) ->\n    @_CONF =\n      tooltip:\n        template: \"singlePoint\"\n        format:\n          x: null\n          y: null\n        callback: \"singlePoint\"\n        alwaysInside: true\n      canvas:\n        bgcolor: \"#FFFFFF\"\n        render: \"dot\" # dot, line\n        title:\n          text: \"AgChart\"\n          color: \"#2f2f2f\"\n          size: 24\n          border:\n            radius: 2\n            color: \"#3f3f3f\"\n            padding: [4,1]\n          position:\n            x: 35\n            y: 20\n        label:\n          x:\n            text: null\n            size: 10\n            color: \"#7f7f7f\"\n          y:\n            text: null\n            size: 10\n            color: \"#7f7f7f\"\n        selector: null\n        width: 600.0\n        height: 400.0\n        padding: [0,0] #left/right, bottom/top\n        cross:\n          x:\n            showValue: true\n            show: false\n            color: 'black'\n            stroke: 1\n            offset: 0\n          y:\n            show: false\n            color: 'black'\n            stroke: 1\n            offset: 0\n            showValue: true\n        crossValue:\n          x:\n            orient: 'bottom' # Top not implemented\n            show: true\n            color: '#0971b7'\n            fontColor: '#ffffff'\n            fontSize: 12\n            format: (d) ->\n              da = d.toString().split(\" \")[2]\n              m = d.toString().split(\" \")[1]\n              y = d.toString().split(\" \")[3].substring(2)\n              \"#{da} #{m} #{y}\"\n            radius: 5\n          y:\n            show: true\n            color: 'white'\n      logo:\n        url: \"agflow-logo.svg\"\n        width: 100\n        height: 50\n        x: 'right'\n        y: 'bottom'\n        opacity: 0.5\n      point:\n        onMouseover: \"singlePoint\"\n        onMouseout: \"singlePoint\"\n        r: 4\n        mode: 'empty' # empty, fill\n        color: \"munin\"\n        stroke:\n          width: 1\n      axis:\n        x:\n          format: null\n          tickSize: null\n          orient: \"bottom\" # bottom, top\n          tickColor: \"#f5f5f5\"\n          tickWidth: 2\n          strokeWidth: 1\n          color: \"#2b2e33\" # THe color of the y axis\n        y:\n          format: null\n          tickSize: null\n          orient: \"left\" # left, right\n          tickColor: \"#f5f5f5\"\n          tickWidth: 2\n          strokeWidth: 1\n          color: \"#2b2e33\" # The color of the x axis\n      plugins:\n        exportation:\n          enable: true\n          copyright:\n            text: \"(c) AgFlow 2014\"\n            color: \"#9f9f9f\"\n            fontSize: 12\n    @_CANVAS = undefined\n    @_TOOLTIP = undefined\n    @_SCALE =\n      x: undefined\n      y: undefined\n\n    @defaultConfig args.config\n    @_SERIES = @prepareSeries args.series\n    @computePadding()\n    @computeScales()\n    return\n\n  # TODO: should be in utils lib\n  # Update the obj1 with the obj2\n  updateObject: (obj1, obj2, replace=true) ->\n    # Check if the obj is a node.\n    isNode = (obj) ->\n      if obj?[\"0\"]?.nodeName?\n        return true\n      return false\n\n    update = (obj1,obj2, replace=true) ->\n      if obj2?\n        for k of obj2\n          if isNode(obj2[k]) # We copy the node as it is\n            obj1[k] = obj2[k][0] ? obj1[k][0]\n          else if typeof obj2[k] == 'object'\n            obj1[k] = {} if not obj1[k]?\n            update obj1[k], obj2[k], replace\n          else\n            if replace\n              obj1[k] = obj2[k] ? obj1[k]\n            else\n              obj1[k] = obj1[k] ? obj2[k]\n      return obj1\n    update(obj1, obj2, replace)\n\n  # Define custom value for the configuration\n  defaultConfig: (c={}) ->\n    @updateObject(@_CONF,c)\n    return @_CONF\n\n  # Effects for the events\n  effects:\n    singlePoint:\n      onMouseover: (params) ->\n        _circleNode = params.circleNode\n        curStrokeWidth =\n          parseFloat( _circleNode.getAttribute(\"stroke-width\") )\n        _circleNode.setAttribute(\"stroke-width\", curStrokeWidth*2)\n      onMouseout: (params) ->\n        _circleNode = params.circleNode\n        curStrokeWidth =\n          parseFloat( _circleNode.getAttribute(\"stroke-width\") )\n        _circleNode.setAttribute(\"stroke-width\", curStrokeWidth/2)\n    multipleVertical:\n      onMouseover:  (params) ->\n        _circleNode = params.circleNode\n        cx = _circleNode.getAttribute('cx')\n        strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))*2\n        $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n          $(node).attr(\"stroke-width\", strokeWidth)\n        )\n      onMouseout: (params) ->\n        _circleNode = params.circleNode\n        cx = _circleNode.getAttribute('cx')\n        strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))/2\n        $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n          $(node).attr(\"stroke-width\", strokeWidth)\n        )\n    multipleVerticalInverted:\n      onMouseover:  (params) ->\n        _circleNode = params.circleNode\n        cx = _circleNode.getAttribute('cx')\n        strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))*2\n        $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n          $(node).attr(\"stroke-width\", strokeWidth)\n          fill = $(node).attr(\"fill\")\n          stroke = $(node).attr(\"stroke\")\n          $(node).attr(\"stroke\", fill)\n          $(node).attr(\"fill\", stroke)\n        )\n\n      onMouseout: (params) ->\n        _circleNode = params.circleNode\n        cx = _circleNode.getAttribute('cx')\n        strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))/2\n        $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n          $(node).attr(\"stroke-width\", strokeWidth)\n          fill = $(node).attr(\"fill\")\n          stroke = $(node).attr(\"stroke\")\n          $(node).attr(\"stroke\", fill)\n          $(node).attr(\"fill\", stroke)\n        )\n  toString: ->\n    console.log \"Canvas in #{@_CONF.selector}\"\n    console.log \"Config\", @_CONF\n    console.log \"Datas:\", @_SERIES\n    return\n\n  computePadding: ->\n    pad = @_CONF.point.r+@_CONF.point.stroke.width/2.0\n    if @_CONF.canvas.padding == 'auto'\n      @_CONF.canvas.padding = [pad,pad]\n\n  getDomain: ->\n    maxX = maxY = Number.MIN_VALUE\n    minX = minY = Number.MAX_VALUE\n    for serie in @_SERIES\n      for point in serie.data\n        maxX = point.x if point.x > maxX\n        minX = point.x if point.x < minX\n        maxY = point.y if point.y > maxY\n        minY = point.y if point.y < minY\n    {minX: minX, maxX: maxX, minY: minY, maxY: maxY}\n\n  computeScales: ->\n    _canvas = @_CONF.canvas\n    _pad = _canvas.padding\n    _domain = @getDomain()\n    @_SCALE.width = d3.scale.linear()\n    if @_CONF.axis.x.format?\n      @_SCALE.width = d3.time.scale()\n    @_SCALE.width.domain([_domain.minX,_domain.maxX])\n      .nice() # end with round number\n      .range([_pad[0], _canvas.width-_pad[0]])\n    @_SCALE.height = d3.scale.linear()\n    if @_CONF.axis.y.format?\n      @_SCALE.height = d3.time.scale()\n    @_SCALE.height.domain([_domain.minY,_domain.maxY])\n      .nice()\n      .range([_canvas.height-_pad[1], _pad[1]])\n\n  createCanvas: ->\n    throw new Error(\"No selector defined\") if not @_CONF.canvas.selector?\n    $(@_CONF.canvas.selector).css({\"position\": \"relative\"})\n    @_CANVAS = d3.select(@_CONF.canvas.selector)\n      .append('svg')\n      .attr(\"fill\", @_CONF.canvas.bgcolor)\n      .attr('width', @_CONF.canvas.width)\n      .attr('height', @_CONF.canvas.height)\n\n  renderTitle: (params={\n    title: null\n    padding: null\n  }) ->\n    rect = @_CANVAS.append(\"rect\")\n    text = @_CANVAS.append(\"text\")\n      .attr(\"x\", params.title.position.x)\n      .attr(\"y\", params.title.position.y)\n      .attr(\"class\", \"chart-title\")\n      .attr(\"fill\", params.title.color)\n      .attr(\"font-size\", params.title.size)\n      .text(params.title.text)\n    textDim = text.node().getBBox()\n    rect\n      .attr(\"x\", params.title.position.x-params.title.border.padding[0])\n      .attr(\"y\", textDim.y-params.title.border.padding[1]+1)\n      .attr(\"width\", textDim.width+params.title.border.padding[0]*2)\n      .attr(\"height\", textDim.height+params.title.border.padding[1]*2)\n      .attr(\"ry\", params.title.border.radius)\n      .attr(\"rx\", params.title.border.radius)\n      .attr(\"stroke\", params.title.border.color)\n\n\n  renderLabel: (params={\n    label:\n      color: null\n      size: null\n      trans: null\n      text: \"\"\n      textAnchor: \"\"\n    class: null }) ->\n    @_CANVAS.append(\"text\")\n      .attr(\"fill\", params.label.color)\n      .attr(\"class\", \"label #{params.class}\")\n      .attr(\"font-size\", params.label.size+\"px\")\n      .attr(\"text-anchor\", params.label.textAnchor)\n      .attr(\"transform\", params.label.trans)\n      .text(params.label.text)\n\n\n  renderAxis: (params) ->\n    line = @_CANVAS.append(\"line\")\n      .attr(\"stroke\", params.axis.color)\n      .attr(\"stroke-width\", params.axis.strokeWidth)\n    switch params.axis.orient\n      when 'bottom'\n        line\n          .attr(\"x1\", params.canvas.padding[0])\n          .attr(\"y1\", params.canvas.height-params.canvas.padding[1])\n          .attr(\"x2\", params.canvas.width-params.canvas.padding[0])\n          .attr(\"y2\", params.canvas.height-params.canvas.padding[1])\n      when \"top\"\n        line\n          .attr(\"x1\", params.canvas.padding[0])\n          .attr(\"y1\", params.canvas.padding[1])\n          .attr(\"x2\", params.canvas.width-params.canvas.padding[0])\n          .attr(\"y2\", params.canvas.padding[1])\n      when \"left\"\n        line\n          .attr(\"x1\", params.canvas.padding[0])\n          .attr(\"y1\", params.canvas.padding[1])\n          .attr(\"x2\", params.canvas.padding[0])\n          .attr(\"y2\", params.canvas.height-params.canvas.padding[1])\n      when \"right\"\n        line\n          .attr(\"x1\", params.canvas.width-params.canvas.padding[0])\n          .attr(\"y1\", params.canvas.padding[1])\n          .attr(\"x2\", params.canvas.width-params.canvas.padding[0])\n          .attr(\"y2\", params.canvas.height-params.canvas.padding[1])\n      else\n        throw new Error(\"Unknown orientation: \", params.axis.orient)\n\n  renderGrid: (params={\n    class: null\n    color: null\n    scale:  null\n    height: null\n    width:  null\n    padding:null\n    orient: null\n    trans:  null\n    label:  null\n    format: null }) ->\n\n    grid = d3.svg.axis()\n      .scale(params.scale)\n      .orient(params.orient)\n      .tickSize(params.tickSize)\n\n    if params.format?\n      grid.ticks(d3.time.months, 1)\n      grid.tickFormat(\n        d3.time.format(params.format)\n      )\n\n    ggrid = @_CANVAS\n      .append(\"g\")\n      .attr(\"transform\", params.trans)\n      .attr(\"class\", \"axis #{params.class}\")\n      .call(grid)\n\n    @renderLabel(params)\n\n    ggrid.selectAll(\"line\")\n      .attr(\"stroke\", params.color)\n      .attr(\"stroke-width\", params.strokeWidth)\n\n    # Selecting the ticks only without the first one\n    ggrid.selectAll(\"line\")\n      .attr(\"stroke\", params.tickColor)\n      .attr(\"width-stroke\", params.tickWidth)\n\n    # Trick to hide the path around the graph\n    ggrid.selectAll(\"path\")\n      .style(\"display\", \"none\")\n\n    # Color of the text on axis\n    ggrid.selectAll(\"text\")\n      .attr(\"fill\", params.label.color)\n      .attr(\"font-size\", params.label.size)\n\n  renderXGrid: ->\n    padding = @_CONF.canvas.padding[1]\n    height = @_CONF.canvas.height\n    width = @_CONF.canvas.width\n    label = @_CONF.canvas.label.x\n    label.textAnchor = \"middle\"\n    switch @_CONF.axis.x.orient\n      when 'bottom'\n        trans = \"translate(0, #{padding})\"\n        label.trans =\n          \"translate(#{width/2}, #{height-2})\"\n      when 'top'\n        trans = \"translate(0, #{height-padding})\"\n        label.trans =\n          \"translate(#{width/2}, #{padding/2})\"\n      else\n        throw new Error(\"Unknown orientation: \", @_CONF.axis.x.orient)\n    tickSize = @_CONF.axis.x.tickSize\n    tickSize =  height-padding*2 if tickSize == 'full'\n    params = {\n      class: \"x\"\n      height: @_CONF.canvas.height\n      width: @_CONF.canvas.width/2\n      scale: @_SCALE.width\n      tickSize: tickSize\n      padding: padding\n      label: label\n      orient: @_CONF.axis.x.orient\n      trans: trans\n      tickColor: @_CONF.axis.x.tickColor\n      tickWidth: @_CONF.axis.x.tickWidth\n      color: @_CONF.axis.x.color\n      strokeWidth: @_CONF.axis.x.strokeWidth\n      format: @_CONF.axis.x.format\n    }\n    @renderGrid(params)\n\n  renderYGrid: ->\n    padding = @_CONF.canvas.padding\n    height = @_CONF.canvas.height\n    width = @_CONF.canvas.width\n    label = @_CONF.canvas.label.y\n    switch @_CONF.axis.y.orient\n      when 'left'\n        trans = \"translate(#{padding[0]}, 0)\"\n        label.trans =\n          \"rotate(-90) translate(#{-height/2}, #{padding[0]+10})\"\n      when 'right'\n        trans = \"translate(#{width-padding[0]}, 0)\"\n        label.trans =\n          \"translate(#{width-padding[0]}, #{padding[1]/2})\"\n        label.textAnchor = \"middle\"\n      else\n        throw new Error(\"Unknown orientation: \", @_CONF.axis.y.orient)\n\n    tickSize = @_CONF.axis.y.tickSize\n    tickSize = -width+padding[0]*2 if tickSize == 'full'\n\n    params = {\n      class: \"y\"\n      height: @_CONF.canvas.height\n      width: @_CONF.canvas.width\n      scale: @_SCALE.height\n      tickSize: tickSize\n      padding: padding\n      label: label\n      orient: @_CONF.axis.y.orient\n      trans: trans\n      tickColor: @_CONF.axis.y.tickColor\n      tickWidth: @_CONF.axis.y.tickWidth\n      color: @_CONF.axis.y.color\n      strokeWidth: @_CONF.axis.y.strokeWidth\n      format: @_CONF.axis.y.format\n    }\n    @renderGrid(params)\n\n\n  prepareSeries: (data) ->\n    # Adding the configuration to each points\n    # TODO: adding the configuration to each point might not be the\n    # better solution\n    _palette = new palette.Main(@_CONF.point.color)\n    for serie, i in data\n      for point in serie.data\n        point.serie = i\n\n        # NOTE:\n        # The configuration of the point should be automatic. But\n        # the problem is that we need to clone the configuration\n        # of the serie to each point\n        point.config = {}\n        point.config.color = @_CONF.point.color\n        if _palette.isDefined()\n          point.config.color = _palette.color(i)\n        if serie.config?.color?\n          point.config.color = serie.config.color\n        point.config.r = serie.config?.r || @_CONF.point.r\n        point.config.stroke = {\n          width: @_CONF.point.stroke.width\n        }\n        if serie.config?.stroke?.width?\n          point.config.stroke.width = serie.config.stroke.width\n    data\n\n  renderPoints: ->\n    _scope  = @\n    _conf   = @_CONF\n    _canvas = @_CANVAS\n    _effects = @effects\n    _tooltipShow = @tooltip.show\n    _tooltipHide = @tooltip.hide\n    _tooltipNode = @_TOOLTIP\n    _tooltipCallback = _conf.tooltip.callback\n    _tooltipTemplate = _conf.tooltip.template\n\n    if typeof(_tooltipCallback) == \"string\"\n      _tooltipCallback = @tooltip.callbacks[_tooltipCallback]\n    if typeof(_tooltipTemplate) == \"string\"\n      _tooltipTemplate = @tooltip.templates[_tooltipTemplate]\n    scaleW = @_SCALE.width\n    scaleH = @_SCALE.height\n\n    series = @_CANVAS.selectAll(\".series\")\n      .data(@_SERIES).enter()\n        .append(\"g\")\n        .attr(\"class\", \"series\")\n        .attr(\"id\", (s, i)->\"#{i}\")\n        .attr(\"title\", (s)->s.name)\n\n    if _conf.canvas.render == 'line' or _conf.canvas.render == 'dotline'\n      valueline = d3.svg.line()\n        .interpolate(\"linear\")\n        .x((d)->scaleW(d.x))\n        .y((d)->scaleH(d.y))\n\n      series.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", (d)->valueline(d.data))\n        .attr('stroke', ((d, serieIndex)->\n          d.data[0].config.color #Take the first color\n        ))\n        .attr(\"fill\", \"none\")\n\n    if _conf.canvas.render == 'dot' or _conf.canvas.render == 'dotline'\n      series.selectAll(\".circle\")\n        .data((d) -> d.data)\n        .enter().append(\"circle\")\n          .attr('cx', (d) -> scaleW(d.x))\n          .attr('cy', (d) -> scaleH(d.y))\n          .attr('data-x', (d) -> d.x)\n          .attr('data-y', (d) -> d.y)\n          .attr('data-color', (d) -> d.config.color)\n          .attr('r', ( (d) ->\n            d.config.r))\n          .attr('stroke',( (d) ->\n            if _conf.point.mode == 'empty'\n              d.config.color\n            else if _conf.point.mode == 'fill'\n              _conf.canvas.bgcolor\n            else\n              throw new Error(\"Unknown point mode '#{_conf.point.mode}'\")\n          ))\n          .attr('fill', ((d)->\n            if _conf.point.mode == 'empty'\n              _conf.canvas.bgcolor\n            else if _conf.point.mode == 'fill'\n              d.config.color\n            else\n              throw new Error(\"Unknown point mode '#{_conf.point.mode}'\")\n          ))\n          .attr('stroke-width', ( (d) ->\n            d.config?.stroke?.width ? _conf.point.stroke.width))\n          .on('mouseover', (d)->\n            effect = _conf.point.onMouseover\n            if typeof effect == 'string'\n              effect = _effects[effect].onMouseover\n            effect(\n              canvas: _canvas\n              circleNode: this\n              data: d\n            )\n\n            # Data for the tooltip callback\n            data = _tooltipCallback(\n              format: _conf.tooltip.format\n              canvas: _canvas\n              tooltipNode: _tooltipNode\n              circleNode: this\n              data: d\n            )\n            _tooltipNode.html(_tooltipTemplate(data))\n            _tooltipShow(this,\n              {\n                canvas:\n                  width: _conf.canvas.width\n                  height: _conf.canvas.height\n                tooltip:\n                  alwaysInside: _conf.tooltip.alwaysInside\n              }, _tooltipNode, d)\n          )\n          .on('mouseout', (d) ->\n            effect = _conf.point.onMouseout\n            if typeof effect == 'string'\n              effect = _effects[effect].onMouseout\n            effect(\n              canvas: _canvas\n              circleNode: this\n              data: d\n            )\n            _tooltipHide(_tooltipNode)\n          )\n\n    else\n      throw new Error(\"Unknown render value '#{_canvas.render}'\")\n\n  renderTooltip: ->\n    if not @_TOOLTIP?\n      @_TOOLTIP = d3.select(@_CONF.canvas.selector).append(\"div\")\n        .attr('class', 'tooltip')\n        .style('opacity', 0)\n        .attr('left', 0)\n        .attr('top', 0)\n\n  renderCrossValue: (params={\n    scale: null\n    canvas: null\n    confCanvas: null\n    confCrossV: null\n  }) ->\n    # We append the container at the begining\n    gbox = params.canvas.append(\"g\")\n      .style(\"opacity\", 0)\n    box = gbox.append(\"rect\")\n    text = gbox.append(\"text\")\n      .text(\"AgChartPile\")\n      .attr(\"font-size\", params.confCrossV.x.fontSize)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", params.confCrossV.x.fontColor)\n    textDim = text.node().getBBox()\n    box\n      .attr(\"fill\", params.confCrossV.x.color)\n      .attr(\"rx\", params.confCrossV.x.radius)\n      .attr(\"ry\", params.confCrossV.x.radius)\n\n    if params.confCrossV.x.show\n      timeoutUnmoved = null\n      params.canvas.on(\"mousemove.crossValue\", ->\n        gbox.transition().duration(300).style('opacity', 1)\n        clearTimeout(timeoutUnmoved)\n        eventX = d3.mouse(@)[0]\n\n        # Blocking the X value\n        if eventX < params.confCanvas.padding[0]\n          eventX = params.confCanvas.padding[0]\n        else if eventX > params.confCanvas.width-params.confCanvas.padding[0]\n          eventX = params.confCanvas.width-params.confCanvas.padding[0]\n\n        # Blocking the position of the pile\n        positionX = eventX\n        if eventX < params.confCanvas.padding[0]+textDim.width/2\n          positionX = params.confCanvas.padding[0]+textDim.width/2\n        else if eventX > params.confCanvas.width-params.confCanvas.padding[0]-textDim.width/2\n          positionX = params.confCanvas.width-params.confCanvas.padding[0]-textDim.width/2\n        text\n          .attr(\"y\", textDim.height-textDim.height*0.25) # Seems that we need to remove 25% to have it centered. Auto magically resolved !\n          .attr(\"x\", textDim.width/2)\n        box\n          .attr(\"width\", textDim.width)\n          .attr(\"height\", textDim.height)\n\n        valueX = params.scale.width.invert(eventX)\n        switch params.confCrossV.x.orient\n          when 'top'\n            eventY = params.confCanvas.padding[1]\n          when 'bottom'\n            eventY = params.confCanvas.height-params.confCanvas.padding[1]\n        text.text(params.confCrossV.x.format(valueX))\n        gbox.attr(\"transform\", \"translate(#{positionX-textDim.width/2}, #{eventY})\")\n        gbox.attr(\"cy\", d3.mouse(@)[1])\n\n        # Detect unmoved mouse\n        timeoutUnmoved = setTimeout(( ->\n          gbox.transition().duration(500).style('opacity', 0)\n        ), 2000)\n      )\n\n\n  renderCross: (params={\n    canvas: nulle\n    confCanvas: null\n    confCross: null\n  })->\n    padX = params.confCanvas.padding[0]\n    padY = params.confCanvas.padding[1]\n    offsetX = params.confCross.x.offset\n    offsetY = params.confCross.y.offset\n    width = params.confCanvas.width\n    height = params.confCanvas.height\n    _crossX = params.canvas.append(\"line\")\n      .attr(\"class\", \"crossX\")\n      .attr(\"x1\", -width).attr(\"y1\", padY)\n      .attr(\"x2\", -width).attr(\"y2\", height-padY)\n      .attr(\"stroke\", params.confCross.x.color)\n      .attr(\"stroke-width\", params.confCross.x.stroke)\n    _crossY = params.canvas.append(\"line\")\n      .attr(\"class\", \"crossY\")\n      .attr(\"x1\", padX).attr(\"y1\", -height)\n      .attr(\"x2\", width-padX).attr(\"y2\", -height)\n      .attr(\"stroke\", params.confCross.y.color)\n      .attr(\"stroke-width\", params.confCross.y.stroke)\n    params.canvas.on(\"mousemove.tooltip\", (d)->\n      eventX = d3.mouse(@)[0]\n      eventY = d3.mouse(@)[1]\n      if params.confCross.x.show and\n      eventX >= padX+offsetX and\n      eventX <= width-padX+offsetX\n        _crossX\n          .attr(\"x1\", eventX-offsetX)\n          .attr(\"x2\", eventX-offsetX)\n      if params.confCross.y.show and\n      eventY >= padY+offsetY and\n      eventY <= height-padY+offsetY\n        _crossY\n          .attr(\"y1\", eventY-offsetY)\n          .attr(\"y2\", eventY-offsetY)\n    )\n\n  renderLogo: (params) ->\n    if params.y == 'bottom'\n      params.y = @_CONF.canvas.height-@_CONF.canvas.padding[1]-params.height\n    params.y = @_CONF.canvas.padding[1] if params.y == 'top'\n    if params.x == 'right'\n      params.x = @_CONF.canvas.width-@_CONF.canvas.padding[0]-params.width\n    params.x = @_CONF.canvas.padding[0] if params.y == 'left'\n\n    @_CANVAS\n      .append(\"image\")\n      .attr(\"width\", params.width)\n      .attr(\"height\", params.height)\n      .attr(\"x\", params.x)\n      .attr(\"y\", params.y)\n      .attr(\"opacity\", params.opacity)\n      .attr(\"xlink:href\",@_CONF.logo.url)\n\n  render: ->\n    @_CANVAS = @createCanvas() if not @_CANVAS?\n    @renderLogo(\n      opacity: @_CONF.logo.opacity\n      url: @_CONF.logo.url\n      width: @_CONF.logo.width\n      height: @_CONF.logo.height\n      x: @_CONF.logo.x\n      y: @_CONF.logo.y\n    )\n    @renderCross(\n      canvas: @_CANVAS\n      confCanvas: @_CONF.canvas\n      confCross: @_CONF.canvas.cross\n    )\n    @renderXGrid()\n    @renderYGrid()\n    @renderAxis(\n      canvas: @_CONF.canvas\n      axis: @_CONF.axis.x\n    )\n    @renderAxis(\n      canvas: @_CONF.canvas\n      axis: @_CONF.axis.y\n    )\n    @renderCrossValue(\n      scale: @_SCALE\n      canvas: @_CANVAS\n      confCanvas: @_CONF.canvas\n      confCrossV: @_CONF.canvas.crossValue\n    )\n    @renderTooltip()\n    @renderPoints() # Depends on axis and tooltip\n    @renderTitle(\n      title: @_CONF.canvas.title\n      padding: @_CONF.canvas.padding\n    )\n\n    @renderPluginMenu(\n      selector: @_CONF.canvas.selector\n      confPlugins: @_CONF.plugins\n    )\n\n  renderPluginMenu: (params={\n    selector: null\n    confPlugins: {}\n  }) ->\n    pluginsMenu = $(\"<div/>\", {\n      id: \"pluginsMenu\"\n    }).appendTo(params.selector)\n    pluginsMenu.css({\n      \"position\": \"absolute\"\n      \"left\": @_CONF.canvas.width+1\n      \"top\": \"0px\"\n      \"opacity\": 0.1\n    })\n    pluginsMenu.on(\"mouseover.menuPlugin\", ()->\n      pluginsMenu.animate({opacity: 1}, 10))\n    pluginsMenu.on(\"mouseout.menuPlugin\", ()->\n      pluginsMenu.animate({opacity: 0.1}, 10))\n\n    for plugin of params.confPlugins\n      if params.confPlugins[plugin].enable\n        icon = $(\"<img/>\",{\n          src: \"icons/#{plugin}.png\"\n          width: \"30px\"\n        }).appendTo(pluginsMenu)\n        icon.css({cursor: \"pointer\"})\n        callback = @plugins[plugin].onClick\n        context = @\n        icon.click(-> callback(context, params.selector, params.confPlugins[plugin]))\n\n\n  plugins:\n    exportation:\n      onClick: (context, selector, conf) ->\n        # Replace logo by copyright text\n        image = $(selector).find(\"image\").remove()\n        text = context._CANVAS.append(\"text\")\n          .attr(\"fill\", conf.copyright.color)\n          .attr(\"font-size\", conf.copyright.fontSize+\"px\")\n          .text(conf.copyright.text)\n        width = context._CONF.canvas.width\n        height = context._CONF.canvas.height\n        textDim = text.node().getBBox()\n        console.log width, textDim.width, context._CONF.canvas.padding[0]\n        pX = width-textDim.width-context._CONF.canvas.padding[0]\n        pY = height-context._CONF.canvas.padding[1]-2\n        text.attr(\"transform\", \"translate(#{pX}, #{pY})\")\n\n        # Converting the SVG to a canvas\n        svg = $(selector).find(\"svg\")[0]\n        svg_xml = (new XMLSerializer()).serializeToString(svg)\n        canvas = document.createElement('canvas')\n        $(\"body\").append(canvas)\n        canvg(canvas, svg_xml)\n        canvas.remove()\n\n        # Convert canvas to PNG\n        img = canvas.toDataURL(\"image/png\")\n        a = document.createElement('a')\n        a.href = img\n        a.download = \"agflow.png\"\n        $(\"body\").append(a)\n        a.click()\n\n        # Trick: we need to re-render the logo\n        context.renderLogo(\n          opacity: context._CONF.logo.opacity\n          url: context._CONF.logo.url\n          width:context._CONF.logo.width\n          height: context._CONF.logo.height\n          x: context._CONF.logo.x\n          y: context._CONF.logo.y\n        )\n        text.remove()\n\n  tooltip:\n    show: (context, conf, tooltipNode, d) ->\n      eventX = d3.mouse(context)[0]\n      eventY = d3.mouse(context)[1]\n      left = eventX+d.config.stroke.width\n      top = eventY+d.config.stroke.width\n      if conf.tooltip.alwaysInside\n        if eventX > conf.canvas.width/2.0\n          widthTooltip = parseFloat(\n            tooltipNode.style('width').replace(\"px\", ''))\n          left = eventX-d.config.stroke.width-\n            widthTooltip\n        if eventY > conf.canvas.height/2.0\n          heightTooltip = parseFloat(\n            tooltipNode.style('height').replace(\"px\", ''))\n          top = eventY-d.config.stroke.width-\n            heightTooltip\n      tooltipNode\n        .style(\"left\", left+'px')\n        .style(\"top\", top+'px')\n        .transition().duration(200).style(\"opacity\", 0.9)\n\n    hide: (tooltipNode) ->\n      tooltipNode.transition()\n        .duration(500).style(\"opacity\", 0)\n\n    templates:\n      singlePoint: (data) ->\n        \"<div>#{data[0].serieName}\"+\n          \"<div class='swatch'\"+\n            \"style='background-color: #{data[0].color}'></div>\"+\n        \"</div>\"+\n        \"<div>#{data[0].x} #{data[0].y}</div>\"\n      multipleVertical: (data) ->\n        html = \"\"\n        for d in data\n          html += \"<div>#{d.serieName}\"+\n            \"<div class='swatch'\"+\n              \"style='background-color: #{d.color}'></div>\"+\n          \"</div>\"+\n          \"<div>#{d.x} #{d.y}</div>\"\n        html\n      multipleVerticalInverted: (data) ->\n        html = \"#{data[0].x}\"\n        for d in data\n          html += \"<div>#{d.serieName}: #{d.y}\"+\n            \"<div class='swatch'\"+\n              \"style='background-color: #{d.color}'></div>\"+\n          \"</div>\"\n        html\n\n    callbacks:\n      singlePoint:\n        (params) ->\n          _circleNode = params.circleNode\n          x = parseFloat(_circleNode.getAttribute('data-x'))\n          x = params.format.x(x) if params.format?.x?\n          [{\n            color: params.data.config.color\n            serieName: params.circleNode.parentNode.getAttribute(\"title\")\n            x: x\n            y: params.data.y.toFixed(2)\n          }]\n      multipleVertical:\n        (params) ->\n          # Get all same cx value, take the fill color to\n          # draw watch and show some information\n          _circleNode = params.circleNode\n          cx = _circleNode.getAttribute('cx')\n          x = parseFloat(_circleNode.getAttribute('data-x'))\n          x = params.format.x(x) if params.format?.x?\n          res = []\n          $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n            res.push {\n              serieName: node.parentNode.getAttribute(\"title\")\n              color: node.getAttribute(\"data-color\")\n              y: parseFloat(node.getAttribute(\"data-y\")).toFixed(2)\n              x: x\n            })\n          res\n\n      multipleVerticalInverted:\n        (params) ->\n          # Get all same cx value, take the fill color to\n          # draw watch and show some information\n          _circleNode = params.circleNode\n          cx = _circleNode.getAttribute('cx')\n          x = parseFloat(_circleNode.getAttribute('data-x'))\n          x = params.format.x(x) if params.format?.x?\n          res = []\n          $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n            res.push {\n              serieName: node.parentNode.getAttribute(\"title\")\n              color: node.getAttribute(\"data-color\")\n              y: parseFloat(node.getAttribute(\"data-y\")).toFixed(2)\n              x: x\n            })\n          res\n","module.exports = exp = {}\n\nagchart = require 'agchart'\ntime = require 'utils/time'\n\n# Just for the purpose of the example\ngenData = (len, inter=1) ->\n  els = []\n  for i in [0..len-1] by inter\n    els.push {x: i*1000, y: Math.random()*100}\n  els\n\ngenDataFunc = (len, inter=1, func) ->\n  els = []\n  for i in [0..len-1] by inter\n    els.push {x: i*1000, y: func(i)*10+50}\n  els\n\nexp.run = ->\n  # TODO: finish this module if needed (later on)\n  t = new time.Main(\n    lang: 'en'\n  )\n  tooltipFormat = (d) ->\n    date = new Date(d)\n    formatDate = d3.time.format(\"%b '%y\")\n    formatDate(date)\n\n  tooltipTemplate = (d) ->\n    console.log d\n\n  # singlePoint, multipleVertical, multipleVerticalInverted\n  mode = \"multipleVerticalInverted\"\n  #mode = \"multipleVertical\"\n  #mode = \"singlePoint\"\n\n  agChart = new agchart.Main(\n    config:\n      canvas:\n        render: 'dotline' # dot, line, dotline\n        width: 600.0\n        height: 400.0\n        title:\n          color: \"#4f4f4f\"\n          size: 20\n          text: \"AgChart\"\n        label:\n          x:\n            text: \"Some label X\"\n            size: 10\n            color: \"#7f7f7f\"\n          y:\n            text: \"Some label Y\"\n            size: 10\n            color: \"#7f7f7f\"\n        selector: '#chart1'\n        padding: [50,50]\n        cross:\n          x:\n            show: true\n            color: \"#44A0FF\"\n          y:\n            show: true\n            color: \"#FFA044\"\n      logo:\n        url: \"agflow-logo.png\"\n        width: 100\n        height: 50\n        x: 'right'\n        y: 'bottom'\n        opacity: 0.3\n      tooltip:\n        template: mode\n        callback: mode\n        format:\n          x: tooltipFormat\n      point:\n        onMouseover: mode\n        onMouseout: mode\n        mode: 'fill'\n        r: 3\n        color: 'paired' # Color or palette name\n        stroke: {width: 1, color: null}\n      axis:\n        y:\n          tickSize: \"full\"\n          tickColor: \"#ebebeb\"\n          tickWidth: 2\n          orient: \"right\"\n        x:\n          orient: \"bottom\"\n          tickWidth: 2\n          tickColor: \"#ebebeb\"\n          format: \"%b\"\n          tickSize: \"full\"\n    series: [\n      {\n        name: \"Serie 1\"\n        data: genDataFunc(24*3600*120, 36*3600, (d) -> Math.cos(d)*10)\n        config:\n          stroke: {width: 1}\n      }\n      {\n        name: \"Serie 2\"\n        data: genDataFunc(24*3600*120, 36*3600*2, Math.tan)\n        config:\n          color: \"#ff0001\"\n          stroke: {width: 1}\n      }\n      {\n        name: \"Serie 3\"\n        data: genDataFunc(24*3600*120, 48*3600, Math.sin)\n        config:\n          #color: \"#00fffe\"\n          stroke: {width: 1}\n      }\n    ]\n  )\n  agChart.render()\n","module.exports = exp = {}\n\nexp.Main = class Main\n  constructor: (palette) ->\n    _palettes = @palettes()\n    @_PALETTE = _palettes[palette]\n    @_INDEX = 0\n\n  isDefined: ->\n    if @_PALETTE?\n      return true\n    return false\n\n  color: (i) ->\n    # Get the next color\n    return @_PALETTE[i%@_PALETTE.length]\n\n  palettes: ->\n    schemes = {}\n    schemes.spectrum14 = ['#ecb796','#dc8f70','#b2a470','#92875a',\n      '#716c49','#d2ed82','#bbe468','#a1d05d','#e7cbe6','#d8aad6',\n      '#a888c2','#9dc2d3','#649eb9', '#387aa3'].reverse()\n\n    schemes.spectrum2000 = ['#57306f','#514c76','#646583','#738394',\n      '#6b9c7d','#84b665','#a7ca50','#bfe746','#e2f528','#fff726',\n      '#ecdd00','#d4b11d','#de8800','#de4800','#c91515','#9a0000',\n      '#7b0429','#580839','#31082b']\n\n    schemes.spectrum2001 = ['#2f243f','#3c2c55','#4a3768','#565270',\n      '#6b6b7c','#72957f','#86ad6e','#a1bc5e','#b8d954','#d3e04e',\n      '#ccad2a','#cc8412','#c1521d','#ad3821','#8a1010','#681717',\n      '#531e1e','#3d1818','#320a1b']\n\n    schemes.classic9 = ['#423d4f','#4a6860','#848f39','#a2b73c',\n      '#ddcb53','#c5a32f','#7d5836','#963b20','#7c2626','#491d37',\n      '#2f254a'].reverse()\n\n    schemes.httpStatus = {\n      503: '#ea5029', 502: '#d23f14', 500: '#bf3613'\n      410: '#efacea',409: '#e291dc',403: '#f457e8',408: '#e121d2',401: '#b92dae'\n      405: '#f47ceb',404: '#a82a9f',400: '#b263c6',301: '#6fa024',302: '#87c32b'\n      307: '#a0d84c',304: '#28b55c',200: '#1a4f74',206: '#27839f',201: '#52adc9'\n      202: '#7c979f',203: '#a5b8bd',204: '#c1cdd1'}\n\n    schemes.colorwheel = ['#b5b6a9','#858772','#785f43','#96557e',\n      '#4682b4','#65b9ac','#73c03a','#cb513a'].reverse()\n\n    schemes.cool = ['#5e9d2f','#73c03a','#4682b4','#7bc3b8','#a9884e',\n      '#c1b266','#a47493','#c09fb5']\n\n    schemes.munin = ['#00cc00','#0066b3','#ff8000','#ffcc00','#330099',\n      '#990099','#ccff00','#ff0000','#808080','#008f00','#00487d',\n      '#b35a00','#b38f00','#6b006b','#8fb300','#b30000','#bebebe',\n      '#80ff80','#80c9ff','#ffc080','#ffe680','#aa80ff','#ee00cc',\n      '#ff8080','#666600','#ffbfff','#00ffcc','#cc6699','#999900']\n\n    schemes.paired = [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\n        \"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n\n    return schemes\n","module.exports = exp = {}\n\nexp.Main = class Main\n  constructor:(params={}) ->\n    @_CONF =\n      lang: params.lang ? 'enl'\n\n    @_DATE = new Date()\n    @_TIMESTAMP = @_DATE.getTime()\n    @_MONTHSNAME = {}\n    @_MONTHSNAME.en = ['Jan','Feb','Mar','Apr','May','Jun',\n      'Jul','Aug','Sep','Oct','Nov','Dec']\n    @_MONTHSNAME.enl = ['January','February','March','April','May','June',\n      'July','August','September','October','November','December']\n    @_MONTHSNAME.fr = ['Jan','Fév','Mar','Avr','Mai','Juin',\n      'Juil','Août','Sep','Oct','Nov','Déc']\n    @_MONTHSNAME.frl = ['Janvier','Février','Mars','Avril','Mai','Juin',\n      'Juil','Août','Septembre','Octobre','Novembre','Décembre']\n\n  monthsName: ->\n    @_MONTHSNAME[@_CONF.lang]\n\n  getMonth: ->\n    @monthsName()[@_DATE.getMonth()]\n  getDay: ->\n    @_DATE.getDay()\n  getFullDate: ->\n    @_DATE.getDay()+\" \"+@getMonth()+\" \"+@_DATE.getYear()+\" \"+\n      @_DATE.getHours()+\":\"+@_DATE.getMinutes()\n\n\n  getDate: ->\n    return @_DATE\n\n  setTimestamp: (t) ->\n    return @_TIMESTAMP if not t?\n    @_DATE = new Date(parseInt(t)*1000)\n    @_TIMESTAMP = parseInt(t)\n\n"]}