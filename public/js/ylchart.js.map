{"version":3,"sources":["app/app.coffee","app/components/axis.coffee","app/components/cross.coffee","app/components/grid.coffee","app/components/label.coffee","app/components/legend.coffee","app/components/logo.coffee","app/components/plugin.coffee","app/components/title.coffee","app/components/tooltip.coffee","app/config.coffee","app/effects/point.coffee","app/initialize.coffee","app/plugins/exportation.coffee","app/utils/design.coffee","app/utils/domain.coffee","app/utils/palette.coffee","app/utils/scale.coffee","app/utils/style.coffee","app/utils/time.coffee","app/utils/tools.coffee"],"names":[],"mappings":"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","file":"public/js/ylchart.js","sourcesContent":["module.exports = exp = {}\nM = {\n  # Init\n  config  : require 'ylchart/config'\n  tools   : require 'ylchart/utils/tools'\n  scale   : require 'ylchart/utils/scale'\n  domain  : require 'ylchart/utils/domain'\n  palette : require 'ylchart/utils/palette'\n  design  : require 'ylchart/utils/design'\n  effectsPoint : require 'ylchart/effects/point'\n\n  # Components\n  title:    require 'ylchart/components/title'\n  tooltip:  require 'ylchart/components/tooltip'\n  logo:     require 'ylchart/components/logo'\n  legend:   require 'ylchart/components/legend'\n  cross:    require 'ylchart/components/cross'\n  axis:     require 'ylchart/components/axis'\n  grid:     require 'ylchart/components/grid'\n  label:    require 'ylchart/components/label'\n\n  # Plugins\n  plugin:   require 'ylchart/components/plugin'\n}\n\nexp.Main = class Main\n  constructor: (args) ->\n    # Loading default configuration merged with user\n    # configuration\n    @_CONF = new M.config.Main(args.config).get()\n    @_PALETTE = new M.palette.Main(@_CONF.point.color)\n    @_SVG = undefined\n\n    # Class components\n    @_CLASS = {\n      tooltip: undefined\n      title: undefined\n    }\n\n    # TODO: We can't change args.series !\n    # thus it must be the same after executing this function\n    @_SERIES = M.tools.prepareSeries({\n      series: args.series\n      palette: @_PALETTE\n      confPoint: @_CONF.point})\n\n    # TODO: the auto mode is a bit broken\n    if @_CONF.canvas.padding == 'auto'\n      @_CONF.canvas.padding = M.design.computePadding(@_CONF.point)\n\n    @_DOMAIN = M.domain.computeDomain(args.series)\n    M.domain.fixDomain({\n      domain: @_DOMAIN\n      confDomain: @_CONF.domain\n    })\n\n    @_SCALE = M.scale.computeScales({\n      confCanvas: @_CONF.canvas\n      confAxis: @_CONF.axis\n      confGrid: @_CONF.grid\n      domain: @_DOMAIN\n    })\n\n    @initSVG(@_CONF.canvas)\n\n  # Returns information about the chart\n  toString: ->\n    console.log \"Canvas in #{@_CONF.selector}\"\n    console.log \"Config\", @_CONF\n    console.log \"Classes:\", @_CLASS\n    console.log \"Series:\", @_SERIES\n    return\n\n  # Creating the SVG container in a predefined selector\n  initSVG: (confCanvas) ->\n    throw new Error(\"No selector defined\") if not confCanvas.selector?\n    if !document.querySelector(confCanvas.selector)\n      throw new Error(\"Element '#{confCanvas.selector}' doesn't exists\")\n    $(confCanvas.selector).css({\"position\": \"relative\"})\n    @_SVG = d3.select(confCanvas.selector)\n      .append('svg')\n      .attr(\"fill\", confCanvas.bgcolor)\n      .attr('width', confCanvas.width)\n      .attr('height', confCanvas.height)\n    @_CLASS.tooltip = new M.tooltip.Main(@_CONF.canvas.selector)\n    @_CLASS.plugin  = new M.plugin.Main(@_CONF.canvas.selector)\n    @_CLASS.logo    = new M.logo.Main(@_SVG)\n    @_CLASS.gridX   = new M.grid.Main(@_SVG)\n    @_CLASS.gridY   = new M.grid.Main(@_SVG)\n    @_CLASS.labelX  = new M.label.Main(@_SVG)\n    @_CLASS.labelY  = new M.label.Main(@_SVG)\n    @_CLASS.axisX   = new M.axis.Main(@_SVG)\n    @_CLASS.axisY   = new M.axis.Main(@_SVG)\n    @_CLASS.cross   = new M.cross.Main(@_SVG)\n    @_CLASS.legend  = new M.legend.Main(@_SVG)\n    @_CLASS.title   = new M.title.Main(@_SVG)\n\n\n  renderPoints: ->\n    _scope  = @\n    _conf   = @_CONF\n    _canvas = @_SVG\n    _tooltipNode = @_CLASS.tooltip.getDOM().root\n    _tooltipShow = @_CLASS.tooltip.show\n    _tooltipHide = @_CLASS.tooltip.hide\n    _tooltipCallback = _conf.tooltip.callback\n    _tooltipTemplate = _conf.tooltip.template\n    _effectOver      = _conf.point.onMouseover\n    _effectOut      = _conf.point.onMouseout || _effectOver\n\n    if typeof _effectOver == 'string'\n      _effectOver = M.effectsPoint[_effectOver].onMouseover\n    if typeof _effectOut == 'string'\n      _effectOut = M.effectsPoint[_effectOut].onMouseout\n    if typeof(_tooltipCallback) == \"string\"\n      _tooltipCallback = @_CLASS.tooltip.getCallback(_tooltipCallback)\n    if typeof(_tooltipTemplate) == \"string\"\n      _tooltipTemplate = @_CLASS.tooltip.getTemplate(_tooltipTemplate)\n\n    scaleW = @_SCALE.x\n    scaleH = @_SCALE.y\n\n    series = @_SVG.selectAll(\".series\")\n      .data(@_SERIES).enter()\n        .append(\"g\")\n        .attr(\"class\", \"series\")\n        .attr(\"id\", (s, i)->\"#{i}\")\n        .attr(\"title\", (s)->s.name)\n\n    if _conf.canvas.render == 'line' or _conf.canvas.render == 'dotline'\n      valueline = d3.svg.line()\n        .interpolate(\"linear\")\n        .x((d)->scaleW(d.x))\n        .y((d)->scaleH(d.y))\n\n      series.append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", (d)->valueline(d.data))\n        .attr('stroke', ((d, serieIndex)->\n          d.data[0].config.color #Take the first color\n        ))\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke-width\", _conf.line.stroke.width)\n\n    if _conf.canvas.render == 'dot' or _conf.canvas.render == 'dotline'\n      series.selectAll(\".circle\")\n        .data((d) -> d.data)\n        .enter().append(\"circle\")\n          .attr('cx', (d) -> scaleW(d.x))\n          .attr('cy', (d) -> scaleH(d.y))\n          .attr('data-x', (d) -> d.x)\n          .attr('data-y', (d) -> d.y)\n          .attr('data-color', (d) -> d.config.color)\n          .attr('r', ( (d) ->\n            d.config.r))\n          .attr('stroke',( (d) ->\n            if _conf.point.mode == 'empty'\n              d.config.color\n            else if _conf.point.mode == 'fill'\n              _conf.canvas.bgcolor\n            else\n              throw new Error(\"Unknown point mode '#{_conf.point.mode}'\")\n          ))\n          .attr('fill', ((d)->\n            if _conf.point.mode == 'empty'\n              _conf.canvas.bgcolor\n            else if _conf.point.mode == 'fill'\n              d.config.color\n            else\n              throw new Error(\"Unknown point mode '#{_conf.point.mode}'\")\n          ))\n          .attr('stroke-width', ( (d) ->\n            d.config?.stroke?.width ? _conf.point.stroke.width))\n          .on('mouseover', (d)->\n            _effectOver(\n              canvas: _canvas\n              circleNode: this\n              data: d\n            )\n\n            # Data for the tooltip callback\n            data = _tooltipCallback(\n              format: _conf.tooltip.format\n              canvas: _canvas\n              tooltipNode: _tooltipNode\n              circleNode: this\n              data: d\n            )\n            _tooltipNode.html(_tooltipTemplate(data))\n            _tooltipShow(this,\n              {\n                canvas:\n                  width: _conf.canvas.width\n                  height: _conf.canvas.height\n                tooltip:\n                  alwaysInside: _conf.tooltip.alwaysInside\n              }, _tooltipNode, d)\n\n            # Hide all other series\n            if _conf.point.fadeOnMouseover\n              $(_canvas.node()).find(\".series\")\n                .not(\"[data-hide='true']\")\n                .not(\"[id=#{d.serie}]\").fadeTo(5, 0.15)\n              $(@).show()\n          )\n          .on('mouseout', (d) ->\n            _effectOut(\n              canvas: _canvas\n              circleNode: this\n              data: d\n            )\n            _tooltipHide(_tooltipNode)\n\n            # Show all series\n            if _conf.point.fadeOnMouseover\n              $(_canvas.node()).find(\".series\")\n                .not(\"[id=#{d.serie}]\")\n                .not(\"[data-hide='true']\").fadeTo(1, 1)\n          )\n    else\n      throw new Error(\"Unknown render value '#{_canvas.render}'\")\n\n\n  render: ->\n    @_SVG = @createSVG() if not @_SVG?\n\n    @_CLASS.logo.render(\n      confCanvas: @_CONF.canvas\n      confLogo:   @_CONF.logo\n      style:      @_CONF.style.logo\n    )\n\n    @_CLASS.gridX.render(\n      scale:      @_SCALE.x\n      confCanvas: @_CONF.canvas\n      confGrid:   @_CONF.grid.x\n      style:      @_CONF.style.grid.x\n    )\n\n    @_CLASS.gridY.render(\n      scale:      @_SCALE.y\n      confCanvas: @_CONF.canvas\n      confGrid:   @_CONF.grid.y\n      style:      @_CONF.style.grid.y\n    )\n\n    # WARNING: Should be after the grid to avoid overlapping\n    @_CLASS.axisX.render(\n      confAxis:   @_CONF.axis.x\n      confCanvas: @_CONF.canvas\n      style:      @_CONF.style.axis.x\n    )\n\n    @_CLASS.axisY.render(\n      confAxis:   @_CONF.axis.y\n      confCanvas: @_CONF.canvas\n      style:      @_CONF.style.axis.y\n    )\n\n    @_CLASS.labelX.render(\n      confCanvas: @_CONF.canvas\n      confLabel:  @_CONF.canvas.label.x\n      style: @_CONF.style.label.x\n    )\n\n    @_CLASS.labelY.render(\n      confCanvas: @_CONF.canvas\n      confLabel:  @_CONF.canvas.label.y\n      style: @_CONF.style.label.y\n    )\n\n    @renderPoints() # Depends on axis and tooltip\n\n    @_CLASS.title.render(\n      confCanvas: @_CONF.canvas\n      confTitle:  @_CONF.canvas.title\n      style: @_CONF.style.title\n    )\n\n    @_CLASS.legend.render(\n      svg:        @_SVG  # Needed to update the canvas\n      confCanvas: @_CONF.canvas\n      series:     @_SERIES\n      confLegends:@_CONF.legends\n    ) if @_CONF.legends.show\n\n    @_CLASS.cross.render(\n      svg:        @_SVG\n      confCanvas: @_CONF.canvas\n      confCross:  @_CONF.canvas.cross\n      style: @_CONF.style.cross\n    )\n\n    @_CLASS.cross.renderValue(\n      svg:        @_SVG\n      scale:      @_SCALE\n      confCanvas: @_CONF.canvas\n      confCrossV: @_CONF.canvas.crossValue\n      style:      @_CONF.style.crossValue.x\n    )\n\n    @_CLASS.plugin.render(\n      context:      @\n      confCanvas:   @_CONF.canvas\n      iconsFolder:  @_CONF.pluginsIconsFolder\n      confPlugins:  @_CONF.plugins\n      style: @_CONF.style.plugins\n    )\n","# This module force to draw some axis line\n# at the correct place. It should be rendered\n# after the grid !\nmodule.exports = exp = {}\n\nM = {\n  style : require 'ylchart/utils/style'\n}\n\nexp.Main = class Main\n  constructor: (svg)->\n    @_AXIS = svg.append(\"line\")\n\n  getDOM: ->\n    return {root: @_AXIS}\n\n  render: (params) ->\n    confAxis = params.confAxis\n    confCanvas = params.confCanvas\n    new M.style.Main(@_AXIS).apply(params.style)\n    switch confAxis.orient\n      when 'bottom'\n        @_AXIS\n          .attr(\"x1\", confCanvas.padding[0])\n          .attr(\"y1\", confCanvas.height-confCanvas.padding[1])\n          .attr(\"x2\", confCanvas.width- confCanvas.padding[0])\n          .attr(\"y2\", confCanvas.height-confCanvas.padding[1])\n      when \"top\"\n        @_AXIS\n          .attr(\"x1\", confCanvas.padding[0])\n          .attr(\"y1\", confCanvas.padding[1])\n          .attr(\"x2\", confCanvas.width-confCanvas.padding[0])\n          .attr(\"y2\", confCanvas.padding[1])\n      when \"left\"\n        @_AXIS\n          .attr(\"x1\", confCanvas.padding[0])\n          .attr(\"y1\", confCanvas.padding[1])\n          .attr(\"x2\", confCanvas.padding[0])\n          .attr(\"y2\", confCanvas.height-confCanvas.padding[1])\n      when \"right\"\n        @_AXIS\n          .attr(\"x1\", confCanvas.width-confCanvas.padding[0])\n          .attr(\"y1\", confCanvas.padding[1])\n          .attr(\"x2\", confCanvas.width- confCanvas.padding[0])\n          .attr(\"y2\", confCanvas.height-confCanvas.padding[1])\n      else\n        throw new Error(\"Unknown orientation: \", confAxis.orient)\n","module.exports = exp = {}\nM = {\n  style : require 'ylchart/utils/style'\n}\n\nexp.Main = class Main\n  constructor: (svg) ->\n    @_CROSSPANEL = svg.append(\"g\")\n    @_CROSSX = @_CROSSPANEL.append(\"line\")\n    @_CROSSY = @_CROSSPANEL.append(\"line\")\n    @_VALUE = @_CROSSPANEL.append(\"g\").style(\"opacity\", 0)\n\n  getDOM: ->\n    return {\n      root: @_CROSSPANEL\n      crossX: @_CROSSX\n      crossY: @_CROSSY\n      value: @_VALUE\n    }\n\n  render: (params)->\n    confCanvas = params.confCanvas\n    style      = params.style\n    padX       = confCanvas.padding[0]\n    padY       = confCanvas.padding[1]\n    width      = confCanvas.width\n    height     = confCanvas.height\n    offsetX    = params.confCross.x.offset\n    offsetY    = params.confCross.y.offset\n    _crossX    = @_CROSSX\n    _crossY    = @_CROSSY\n\n    new M.style.Main(@_CROSSX).apply(style.x)\n      .attr(\"x1\", -width).attr(\"y1\", padY)\n      .attr(\"x2\", -width).attr(\"y2\", height-padY)\n    new M.style.Main(@_CROSSY).apply(style.y)\n      .attr(\"x1\", padX).attr(\"y1\", -height)\n      .attr(\"x2\", width-padX).attr(\"y2\", -height)\n\n    timeoutUnmoved = null\n    params.svg.on(\"mousemove.cross\", (d)->\n      eventX = d3.mouse(@)[0]\n      eventY = d3.mouse(@)[1]\n\n      if eventY >= padY+offsetY and eventY <= height-padY-offsetY and\n      eventX >= padX+offsetX and eventX <= width-padX-offsetX\n        if params.confCross.x.show and\n        eventX >= padX+offsetX and\n        eventX <= width-padX-offsetX\n          _crossX\n            .attr(\"x1\", eventX-offsetX)\n            .attr(\"x2\", eventX-offsetX)\n        if params.confCross.y.show and eventY >= padY+offsetY and eventY <= height-padY-offsetY\n          _crossY\n            .attr(\"y1\", eventY-offsetY)\n            .attr(\"y2\", eventY-offsetY)\n\n        _crossX.transition().style('opacity', 1)\n        _crossY.transition().style('opacity', 1)\n        clearTimeout(timeoutUnmoved)\n        # Detect unmoved mouse\n        timeoutUnmoved = setTimeout(( ->\n          _crossY.transition().duration(500).style('opacity', 0)\n          _crossX.transition().duration(500).style('opacity', 0)\n        ), params.confCross.x.duration)\n    )\n\n  renderValue: (params)->\n    style = params.style\n\n    box = @_VALUE.append(\"rect\")\n    new M.style.Main(box).apply(style.background)\n\n    text = @_VALUE.append(\"text\")\n    new M.style.Main(text).apply(style.text)\n      .text(\"YLChartPile\")\n    textDim = text.node().getBBox()\n\n    if params.confCrossV.x.show\n      timeoutUnmoved = null\n      VALUE = @_VALUE\n      params.svg.on(\"mousemove.crossValue\", ->\n        eventX = d3.mouse(@)[0]\n        eventY = d3.mouse(@)[1]\n\n        # Detect unmoved mouse\n        if d3.mouse(@)[1] >= params.confCanvas.padding[1] and\n        d3.mouse(@)[1] <= params.confCanvas.height-params.confCanvas.padding[1] and\n        d3.mouse(@)[0] >= params.confCanvas.padding[0] and\n        d3.mouse(@)[0] <= params.confCanvas.width-params.confCanvas.padding[0]\n\n          # Blocking the X value\n          if eventX < params.confCanvas.padding[0]\n            eventX = params.confCanvas.padding[0]\n          else if eventX > params.confCanvas.width-params.confCanvas.padding[0]\n            eventX = params.confCanvas.width-params.confCanvas.padding[0]\n\n          # Blocking the position of the pile\n          positionX = eventX\n          if eventX < params.confCanvas.padding[0]+textDim.width/2\n            positionX = params.confCanvas.padding[0]+textDim.width/2\n          else if eventX > params.confCanvas.width-params.confCanvas.padding[0]-textDim.width/2\n            positionX = params.confCanvas.width-params.confCanvas.padding[0]-textDim.width/2\n          text\n            .attr(\"y\", textDim.height-textDim.height*0.25) # Seems that we need to remove 25%\n                                                           # to have it centered. Auto magically\n                                                           # resolved !\n            .attr(\"x\", textDim.width/2)\n          box\n            .attr(\"width\", textDim.width)\n            .attr(\"height\", textDim.height)\n\n          valueX = params.scale.x.invert(eventX)\n          switch params.confCrossV.x.orient\n            when 'top'\n              eventY = params.confCanvas.padding[1]\n            when 'bottom'\n              eventY = params.confCanvas.height-params.confCanvas.padding[1]\n          text.text(params.confCrossV.x.format(valueX))\n          VALUE.attr(\"transform\", \"translate(#{positionX-textDim.width/2}, #{eventY})\")\n          VALUE.attr(\"cy\", d3.mouse(@)[1])\n\n          VALUE.transition().duration(300).style('opacity', 1)\n          clearTimeout(timeoutUnmoved)\n          timeoutUnmoved = setTimeout(( ->\n            VALUE.transition().duration(500).style('opacity', 0)\n          ), params.confCrossV.x.duration)\n      )\n","module.exports = exp = {}\nM = {\n  style : require 'ylchart/utils/style'\n}\n\nexp.Main = class Main\n  constructor: (svg) ->\n    @_GRID = svg.append(\"g\")\n\n  getDOM: ->\n    return {root:@_GRID}\n\n  render: (params) ->\n    confCanvas  = params.confCanvas\n    confGrid    = params.confGrid\n    style       = params.style\n\n    tickSize = confGrid.tick.size\n    if tickSize == 'auto'\n      if confGrid.orient == 'bottom' or confGrid.orient == 'top'\n        tickSize =  confCanvas.height-confCanvas.padding[1]*2\n      else\n        tickSize = -confCanvas.width+confCanvas.padding[0]*2\n\n    switch confGrid.orient\n      when 'bottom'\n        trans = \"translate(0, #{confCanvas.padding[1]})\"\n      when 'top'\n        trans = \"translate(0, #{confCanvas.height-confCanvas.padding[1]})\"\n      when 'right'\n        trans = \"translate(#{confCanvas.width-confCanvas.padding[0]}, 0)\"\n      when 'left'\n        trans = \"translate(#{confCanvas.padding[0]}, 0)\"\n      else\n        trans = ''\n        throw new Error(\"Unknown orientation: \", confGrid.orient)\n\n    grid = d3.svg.axis()\n      .scale(params.scale)\n      .orient(confGrid.orient)\n      .tickSize(tickSize)\n\n    if confGrid.tick.freq != \"auto\"\n      grid.ticks(confGrid.tick.freq)\n\n    if confGrid.format?\n      grid.tickFormat(d3.time.format(confGrid.format))\n\n      grid.ticks(d3.time.months.utc,\n        if confGrid.tick.freq == \"auto\" then 1\n        else confGrid.tick.freq\n      )\n\n    @_GRID\n      .attr(\"transform\", trans)\n      .attr(\"class\", \"axis #{style.class}\")\n      .call(grid)\n\n    # Selecting the ticks and apply style\n    gridTicks = @_GRID.selectAll(\"line\")\n    new M.style.Main(gridTicks).apply(style.tick)\n\n    # Color of the text on axis\n    text = @_GRID.selectAll(\"text\")\n    new M.style.Main(text).apply(style.text)\n\n    # Trick to hide the path around the graph\n    @_GRID.selectAll(\"path\").style(\"display\", \"none\")\n","module.exports = exp = {}\nM = {\n  style : require 'ylchart/utils/style'\n}\n\nexp.Main = class Main\n  constructor: (svg) ->\n    @_LABEL = svg.append(\"text\")\n\n  getDOM: ->\n    return {root: @_LABEL}\n\n  render: (params) ->\n    confCanvas = params.confCanvas\n    confLabel  = params.confLabel\n    style      = params.style\n    offset     = confLabel.offset || 0\n\n    new M.style.Main(@_LABEL).apply(style)\n      .text(confLabel.text)\n\n    textDim = @_LABEL.node().getBBox()\n\n    switch confLabel.orient\n      when 'bottom'\n        trans = \"translate(#{confCanvas.width/2},\n          #{confCanvas.height-confCanvas.padding[1]+textDim.height+offset})\"\n      when 'top'\n        trans = \"translate(#{confCanvas.width/2}, #{confCanvas.padding[1]-offset})\"\n      when 'left'\n        trans =\n          \"rotate(-90) translate(#{-confCanvas.height/2}, #{confCanvas.padding[0]+10})\"\n      when 'right'\n        trans =\n          \"translate(#{confCanvas.width-confCanvas.padding[0]}, #{confCanvas.padding[1]/2})\"\n      else\n        trans = ''\n        throw new Error(\"Unknown orientation: \", confLabel.orient)\n\n    @_LABEL.attr(\"transform\", trans)\n","module.exports = exp = {}\n\nexp.Main = class Main\n  constructor: (svg) ->\n    @_LEGENDS = svg.append(\"g\")\n    @_HIDEALL = false\n\n  getDOM: ->\n    return {root: @_LEGENDS}\n\n  render:(params) ->\n    confCanvas = params.confCanvas\n    confLegends = params.confLegends\n\n    SERIES = params.series\n    SELECTOR = confCanvas.selector\n    rectWidth = confLegends.rect.width\n    rectHeight = confLegends.rect.height\n    textWidth = confLegends.text.width\n    rectMargin = confLegends.margin\n    fontSize = confLegends.text.size\n\n    # Width space available\n    widthSpace = confCanvas.width-confCanvas.padding[0]*2\n\n    posX = confCanvas.padding[0]-confLegends.padding[0]\n    posY = confCanvas.height-confLegends.padding[1]\n    @_LEGENDS.attr(\"transform\", \"translate(#{posX}, #{posY})\")\n\n    currentX = 0\n    currentY = confLegends.padding[1]\n    nbrLegends = SERIES.length-1\n    nbrLegends++ if confLegends.toggleAll.show # Special options to toggle\n\n    for i in [0..nbrLegends] by 1\n      params.svg.attr(\"height\", confCanvas.height+currentY)\n\n      # Toggle for all hide\n      # TODO: better to create a function add legend than doing this tricky hard loop\n      if i == nbrLegends && confLegends.toggleAll.show\n        legend = @drawLegend(@_LEGENDS, i, currentX, currentY,\n          rectWidth, rectHeight, rectMargin,\n          confLegends.toggleAll.color,\n          \"legend option\",\n          fontSize,\n          2\n          confLegends.toggleAll.text[0])\n        callback = @toggleSeries\n      else\n        serie = SERIES[i]\n        color = serie.data[0].config.color\n        text = serie.name\n        if confLegends.format?\n          text = confLegends.format(text)\n        legend = @drawLegend(@_LEGENDS, i, currentX, currentY,\n          rectWidth, rectHeight, rectMargin, color, \"legend\", fontSize, 5, text)\n        callback = @toggleSerie\n\n      # Update canvas height\n      if currentX+rectWidth+textWidth+\n          rectMargin > widthSpace-rectWidth-textWidth-rectMargin\n        currentX = 0\n        currentY += 15\n      else\n        currentX += rectWidth+textWidth+rectMargin\n\n      # Careful, a closure is needed here !\n      legend.on(\"click\",\n        ((scope, cb, index) ->\n          return ->\n            cb.call(this, scope, SELECTOR, index, [legend, confLegends.toggleAll.text])\n        )(@, callback, i)\n      )\n\n  drawLegend: (LEGENDS, i, currentX, currentY, rectWidth,\n    rectHeight, rectMargin, color, className, fontSize, radius, text) ->\n    legend = LEGENDS.append(\"g\")\n      .style(\"cursor\", \"pointer\")\n      .attr(\"transform\", \"translate(#{currentX}, #{currentY})\")\n      .attr(\"data-index\", i)\n      .attr(\"data-hide\", \"false\")\n      .attr(\"class\", className)\n    rect = legend.append(\"rect\")\n      .attr(\"width\", rectWidth)\n      .attr(\"height\", rectHeight)\n      .attr(\"fill\", color)\n      .attr(\"rx\", radius)\n      .attr(\"ry\", radius)\n    legend.append(\"text\")\n      .attr(\"x\", rectMargin+rectWidth)\n      .attr(\"y\", rectHeight-1)\n      .attr(\"fill\", color)\n      .attr(\"font-size\", fontSize)\n      .attr(\"background\", \"#ff0000\")\n      .text(text)\n    return legend\n\n  toggleSerie: (scope, selector, index) ->\n    opacity = $(@).find(\"rect\").css(\"opacity\")\n    hide = @getAttribute(\"data-hide\")\n    if hide == \"false\"\n      $(@).find(\"rect\").fadeTo(100, 0.1)\n      $(selector).find(\".series#\"+index).attr(\"data-hide\", \"true\")\n      @setAttribute(\"data-hide\", \"true\")\n    else\n      $(@).find(\"rect\").fadeTo(100, 1)\n      $(selector).find(\".series#\"+index).attr(\"data-hide\", \"false\")\n      @setAttribute(\"data-hide\", \"false\")\n    $(selector).find(\".series#\"+index).toggle(\"normal\")\n\n  toggleSeries: (scope, selector, index, options) ->\n    hide = !scope._HIDEALL\n    scope._HIDEALL = hide\n    if hide\n      options[0].select(\"text\").text(options[1][1])\n      $(@).parent().find(\"rect\").fadeTo(500, 0.1)\n      $(selector).find(\".series\").hide(\"normal\")\n    else\n      options[0].select(\"text\").text(options[1][0])\n      $(@).parent().find(\"rect\").fadeTo(100, 1)\n      $(selector).find(\".series\").show(\"normal\")\n    $(@).parent().find(\".legend\").attr(\"data-hide\", hide)\n    $(selector).find(\".series\").attr(\"data-hide\", hide)\n\n","module.exports = exp = {}\nM = {\n  style: require \"ylchart/utils/style\"\n}\n\nexp.Main = class Main\n  constructor: (svg, canvas) ->\n    @_IMAGE = svg.append(\"image\")\n\n  getDOM: ->\n    return {root: @_IMAGE}\n\n  render: (params) ->\n    confCanvas = params.confCanvas\n    HEIGHT  = confCanvas.height\n    WIDTH   = confCanvas.width\n    PADDING = confCanvas.padding\n    confLogo = params.confLogo\n    style = params.style\n    posX = posY = 100\n\n    if confLogo.position.y == 'bottom'\n      posY = HEIGHT-PADDING[1]-style.height\n    else if confLogo.position.y == 'top'\n      posY = PADDING[1]\n    if confLogo.position.x == 'right'\n      posX = WIDTH-PADDING[0]-style.width\n    else if confLogo.position.x == 'left'\n      posX = PADDING[0]\n\n    new M.style.Main(@_IMAGE).apply(params.style)\n      .attr(\"x\", posX)\n      .attr(\"y\", posY)\n","module.exports = exp = {}\n\nexp.Main = class Main\n  constructor: (selector) ->\n    @_MENU = $(\"<div/>\", {\n      id: \"pluginsMenu\"\n    }).appendTo(selector)\n    @_PLUGINSDOM = {}\n\n  getDOM: ->\n    return {root: @_MENU, plugins: @_PLUGINSDOM}\n\n  render: (PARAMS) ->\n    confCanvas  = PARAMS.confCanvas\n    style       = PARAMS.style\n    pluginsMenu = @_MENU\n\n    switch style.panel.position\n      when \"right\"\n        style.panel.position = \"absolute\"\n        style.panel.left = confCanvas.width+1\n      when \"left\"\n        style.panel.position = \"absolute\"\n        style.panel.left = 0\n    pluginsMenu.css(style.panel)\n\n    pluginsMenu.on(\"mouseover.menuPlugin\", ()->\n      pluginsMenu.animate({opacity: 1}, 10))\n    pluginsMenu.on(\"mouseout.menuPlugin\", ()->\n      pluginsMenu.animate({opacity: style.panel.opacity}, 10))\n\n    for plugin of PARAMS.confPlugins\n      if PARAMS.confPlugins[plugin].enable\n        icon = $(\"<i/>\",{\n          class: \"fa fa-#{PARAMS.confPlugins[plugin].fa} fa-2x\"\n          title: PARAMS.confPlugins[plugin].displayName\n        }).appendTo(pluginsMenu)\n        icon.css({cursor: \"pointer\"})\n        pluginModule = require 'ylchart/plugins/'+plugin\n        context = PARAMS.context\n        # Note: i don't get why we need to bind it here but\n        # it's not working without it if you have more than one chart\n        callback = pluginModule.onClick.bind(@, context,\n          confCanvas.selector, PARAMS.confPlugins[plugin])\n        icon.click( -> callback() )\n        @_PLUGINSDOM[plugin] = icon\n","# Render the title of the chart with specific parameters\nmodule.exports = exp = {}\nM = {\n  style : require 'ylchart/utils/style'\n}\n\nexp.Main = class Main\n  constructor: (svg) ->\n    @boxTitle   = svg.append(\"g\")\n    @texts = []\n\n  getDOM: ->\n    return {\n      root:     @boxTitle\n      texts: @texts\n    }\n\n  render: (params) ->\n    confCanvas  = params.confCanvas\n    confTitle   = params.confTitle\n    style       = params.style\n    posX = confTitle.position.x\n    posY = confTitle.position.y\n    nextPos = [posX, posY]\n    @texts = []\n    # TODO: add generic style params to the children\n    # so we would have the choice to have defaults params or not\n    for obj, i in confTitle.texts\n      boxText = @boxTitle.append(\"text\")\n      new M.style.Main(boxText).apply(style[i])\n          .attr(\"y\", nextPos[1])\n          .attr(\"class\", confTitle.class)\n          .attr(\"font-family\", confTitle.fontFamily)\n          .text(obj.text)\n      dimText = boxText.node().getBBox()\n      nextPos[1] = nextPos[1]+dimText.height+(obj.interline || 0)\n      @texts.push {node: boxText, dim: dimText}\n\n    @boxTitle.attr(\"transform\", \"translate(#{posX},\n      #{posY+@texts[0].dim.height/2})\")\n","# Render the tooltip and access to its methods to display/hide it\nmodule.exports = exp = {}\n\nexp.Main = class Main\n  constructor: (selector) ->\n    if not @_TOOLTIP?\n      @_TOOLTIP = d3.select(selector).append(\"div\")\n        .attr('class', 'ylchart_tooltip')\n        .style('opacity', 0)\n        .style('left', 0)\n        .style('top', 0)\n        .attr('id', 'ylchart_tooltip')\n\n  getDOM: () ->\n    return {root: @_TOOLTIP}\n\n  show: (context, conf, tooltipNode, d) ->\n    tooltipNode.attr(\"width\", 200).attr(\"height\", 100)\n    eventX = d3.mouse(context)[0]\n    eventY = d3.mouse(context)[1]\n    left = eventX+d.config.stroke.width\n    top = eventY+d.config.stroke.width\n    if conf.tooltip.alwaysInside\n      if eventX > conf.canvas.width/2.0\n        widthTooltip = parseFloat(\n          tooltipNode.style('width').replace(\"px\", ''))\n        left = eventX-d.config.stroke.width-\n          widthTooltip\n      if eventY > conf.canvas.height/2.0\n        heightTooltip = parseFloat(\n          tooltipNode.style('height').replace(\"px\", ''))\n        top = eventY-d.config.stroke.width-\n          heightTooltip\n    tooltipNode\n      .style(\"left\", left+'px')\n      .style(\"top\", top+'px')\n      .transition().duration(200).style(\"opacity\", 0.9)\n\n  hide: (tooltipNode) ->\n    tooltipNode.transition()\n      .duration(500).style(\"opacity\", 0)\n\n  getTemplate: (str) -> return @_templates[str]\n\n  getCallback: (str) -> return @_callbacks[str]\n\n  _templates:\n    singlePoint: (data) ->\n      html = \"\n        <h1>#{data.serieName}</h1>\n        <div class='serie' id='0'>#{data.x} : #{data.y}\n        <div class='swatch' style='background-color: #{data.color}'></div>\n      </div>\"\n\n    multipleVertical: (data) ->\n      html = \"<h1>#{data[0].x}</h1>\"\n      for d, i in data\n        if not d.hide\n          html += \"<div class='serie' id='#{i}'>#{d.serieName} : #{d.y}\"+\n            \"<div class='swatch'\"+\n              \"style='background-color: #{d.color}'></div>\"+\n          \"</div>\"\n      html\n\n  _callbacks:\n    singlePoint: (params) ->\n      _circleNode = params.circleNode\n      x           = _circleNode.getAttribute('data-x')\n      {\n        color:     params.data.config.color\n        serieName: params.circleNode.parentNode.getAttribute(\"title\")\n        x:         x\n        y:         params.data.y\n        hide:      _circleNode.parentNode.getAttribute(\"data-hide\") == \"true\"\n      }\n\n    multipleVertical: (params) ->\n      # Get all same cx value, take the fill color to\n      # draw watch and show some information\n      _circleNode = params.circleNode\n      cx          = _circleNode.getAttribute('cx')\n      x           = _circleNode.getAttribute('data-x')\n      title       = _circleNode.parentNode.getAttribute('title')\n      res         = []\n      $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n        res.push {\n          title: title\n          serieName: node.parentNode.getAttribute(\"title\")\n          color: node.getAttribute(\"data-color\")\n          y: node.getAttribute(\"data-y\")\n          x: x\n          hide: node.parentNode.getAttribute(\"data-hide\") == \"true\"\n        })\n      res\n","module.exports = exp = {}\nM = {\n  tools: require 'ylchart/utils/tools'\n}\n\nexp.Main = class Main\n  constructor: (userConfig) -> M.tools.updateObject(@defaultConfig,userConfig)\n\n  # Get the configuration object\n  get: () -> @defaultConfig\n\n  # Default configuration for ylchart\n  defaultConfig:\n    style:\n      plugins:\n        panel:\n          position: \"right\"\n          left: null\n          top: 0\n          opacity: 0.3\n      axis:\n        x:\n          stroke: \"#2b2e33\"\n          class: \"x\"\n          \"stroke-width\": 1\n        y:\n          stroke: \"#2b2e33\"\n          class: \"y\"\n          \"stroke-width\": 1\n      # logo:\n      #   id: \"logo\"\n      #   \"xlink:href\": \"your-logo.svg\"\n      #   width: 100\n      #   height: 50\n      #   opacity: 0.5\n      grid:\n        x:\n          class: \"x\"\n          tick:\n            stroke: \"#f5f5f5\"\n            \"width-stroke\": 2\n          text:\n            fill: \"#2b2e33\"\n            \"font-size\": 13\n            \"font-weight\": \"normal\"\n        y:\n          class: \"y\"\n          tick:\n            stroke: \"#f5f5f5\"\n          text:\n            fill: \"#2b2e33\"\n            \"font-size\": 13\n            \"font-weight\": \"normal\"\n      label:\n        x:\n          \"text-anchor\": \"middle\"\n          class: \"label x\"\n          fill: \"#5f5f5f\"\n          \"font-size\": 14\n          \"font-weight\": \"bold\"\n        y:\n          \"text-anchor\": \"middle\"\n          \"font-size\": 14\n          fill: \"#5f5f5f\"\n          class: \"label y\"\n          \"font-weight\": \"bold\"\n      title: [\n        {fill: \"#2f2f2f\", \"font-size\": 15, \"font-weight\": \"bold\"}\n        {fill: \"#2f2f2f\", \"font-size\": 15, \"font-weight\": \"bold\"}\n        {fill: \"#2f2f2f\", \"font-size\": 12}\n      ]\n      cross:\n        x:\n          class: \"crossX\"\n          stroke: \"#44A0FF\"\n          \"stroke-width\": 1\n        y:\n          class: \"crossY\"\n          stroke: \"#FFA044\"\n          \"stroke-width\": 1\n      crossValue:\n        x:\n          text:\n            \"font-size\": 12\n            \"text-anchor\": \"middle\"\n            fill: \"#FFFFFF\"\n          background:\n            fill: \"#0971b7\"\n            rx: 5\n            ry: 5\n\n    tooltip:\n      template: \"singlePoint\"\n      callback: \"singlePoint\"\n      alwaysInside: true\n    canvas:\n      scale:\n        x:\n          nice: false\n          padding: [10, 10] # NOT WORKING YET\n        y:\n          nice: true\n          padding: [10, 10] # NOT WORKING YET\n      bgcolor: \"#FFFFFF\"\n      render: \"dot\" # dot, line\n      title:\n        fontFamily: \"arial\"\n        position: {x: 20, y: 3}\n        class: \"title\"\n        texts: [\n          {text: \"YLChart Example\", interline: -4.9}\n          {text: \"The interactive chart library\", interline: -4.9}\n          {text: \"Play with datas !\"}\n        ]\n      label:\n        x:\n          text: \"X Axis\"\n          offset: 10\n          orient: \"bottom\"\n        y:\n          text: \"Y Axis\"\n          orient: \"right\"\n          offset: 0\n      selector: null\n      width: 600.0\n      height: 400.0\n      padding: [0,0] #left/right, bottom/top\n      cross:\n        x:\n          show: true\n          offset: 0\n          duration: 1200\n        y:\n          show: true\n          offset: 0\n          duration: 1200\n      crossValue:\n        x:\n          orient: 'bottom' # Top not implemented\n          show: true\n          format: (d) ->\n            da = d.toString().split(\" \")[2]\n            m = d.toString().split(\" \")[1]\n            y = d.toString().split(\" \")[3].substring(2)\n            \"#{da} #{m} #{y}\"\n          duration: 1200\n    domain:\n      x: margin: 5\n      y: margin: 5\n    logo:\n      position: {x: 'right', y: 'bottom'}\n    line:\n      stroke:\n        width: 2\n    point:\n      onMouseover: \"singlePoint\"\n      onMouseout: null\n      fadeOnMouseover: true\n      r: 4\n      mode: 'empty' # empty, fill\n      color: \"munin\"\n      stroke:\n        width: 1\n    axis:\n      x: orient: \"bottom\"\n      y: orient: \"left\"\n    grid:\n      x:\n        format: \"%b\"\n        orient: \"bottom\"\n        tick:\n          mode: \"auto\" # TODO: wtf is this ?\n          size: \"auto\"\n          freq: \"auto\" # Every x tick\n      y:\n        format: null\n        orient: \"right\"\n        tick:\n          mode: \"auto\"\n          size: \"auto\"\n          freq: \"auto\"\n    legends:\n      show: true\n      format: null\n      toggleAll:\n        show: true\n        color: \"#5f5f5f\"\n        text: [\"Hide all\", \"Show all\"]\n      text:\n        size: 14\n        width: 60\n      rect:\n        width: 10\n        height: 10\n      margin: 5\n      padding: [0, 15] # If you don't display some values !\n\n    pluginsIconsFolder: \"icons\"\n    plugins:\n      exportation:\n        fa: \"download\"\n        displayName: \"Download chart\"\n        enable: true\n        copyright:\n          text: \"(c) Yves Lange 2015\"\n          color: \"#9f9f9f\"\n          fontSize: 12\n","module.exports = exp = {}\n\n# Effects for the events\nexp.singlePoint =\n  onMouseover: (params) ->\n    _circleNode = params.circleNode\n    curStrokeWidth =\n      parseFloat( _circleNode.getAttribute(\"stroke-width\") )\n    _circleNode.setAttribute(\"stroke-width\", curStrokeWidth*2)\n  onMouseout: (params) ->\n    _circleNode = params.circleNode\n    curStrokeWidth =\n      parseFloat( _circleNode.getAttribute(\"stroke-width\") )\n    _circleNode.setAttribute(\"stroke-width\", curStrokeWidth/2)\n\nexp.multipleVertical =\n  onMouseover:  (params) ->\n    _circleNode = params.circleNode\n    cx = _circleNode.getAttribute('cx')\n    strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))*2\n    $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n      $(node).attr(\"stroke-width\", strokeWidth)\n    )\n  onMouseout: (params) ->\n    _circleNode = params.circleNode\n    cx = _circleNode.getAttribute('cx')\n    strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))/2\n    $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n      $(node).attr(\"stroke-width\", strokeWidth)\n    )\n\nexp.multipleVerticalInverted =\n  onMouseover:  (params) ->\n    _circleNode = params.circleNode\n    cx = _circleNode.getAttribute('cx')\n    strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))*2\n    $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n      $(node).attr(\"stroke-width\", strokeWidth)\n      fill = $(node).attr(\"fill\")\n      stroke = $(node).attr(\"stroke\")\n      $(node).attr(\"stroke\", fill)\n      $(node).attr(\"fill\", stroke)\n    )\n\n  onMouseout: (params) ->\n    _circleNode = params.circleNode\n    cx = _circleNode.getAttribute('cx')\n    strokeWidth = parseFloat(_circleNode.getAttribute('stroke-width'))/2\n    $(params.canvas[0]).find(\"circle[cx='#{cx}']\").each((e, node)->\n      $(node).attr(\"stroke-width\", strokeWidth)\n      fill = $(node).attr(\"fill\")\n      stroke = $(node).attr(\"stroke\")\n      $(node).attr(\"stroke\", fill)\n      $(node).attr(\"fill\", stroke)\n    )\n","module.exports = exp = {}\n\nM = {\n  ylchart: require 'ylchart/app'\n  time:    require 'ylchart/utils/time'\n}\n\n# Just for the purpose of the example\ngenData = (len, inter=1) ->\n  els = []\n  for i in [0..len-1] by inter\n    els.push {x: i*1000, y: Math.random()*100}\n  els\n\ngenDataFunc = (len, inter=1, func) ->\n  els = []\n  for i in [0..len-1] by inter\n    els.push {x: i*1000, y: func(i)*10+50}\n  els\n\nexp.run = ->\n  # TODO: finish this module if needed (later on)\n  t = new M.time.Main(\n    lang: 'en'\n  )\n\n  series = []\n#  series.push {\n#    name: \"Serie 1\"\n#    data: genDataFunc(24*3600*120, 36*3600, (d) -> Math.cos(d)*10)\n#    config:\n#      stroke: {width: 1}\n#  }\n  series.push {\n    name: \"Serie 3\"\n    data: genDataFunc(24*3600*120, 48*3600, Math.sin)\n    config:\n      #color: \"#00fffe\"\n      stroke: {width: 1}\n  }\n  series.push {\n    name: \"Serie 3b\"\n    data: genDataFunc(24*3600*120, 48*3600, Math.sin)\n    config:\n      color: \"#00fa0f\"\n      stroke: {width: 1}\n  }\n\n  # singlePoint, multipleVertical, multipleVerticalInverted\n  tooltipMode = \"multipleVertical\"\n  #tooltipMode = \"singlePoint\"\n\n  ylchart = new M.ylchart.Main(\n    config:\n      style:\n        label:\n          x:\n            \"font-size\": 25\n        logo:\n          \"xlink:href\": \"your-logo.svg\"\n          height: 30\n          width: 30\n      canvas:\n        render: 'dotline' # dot, line, dotline\n        width: 900.0\n        height: 400.0\n        selector: '#chart1'\n        padding: [50,50]\n        scale: x: nice: true\n        label:\n          x: text: \"Months\"\n          y: text: \"Values\"\n      logo:\n        position:\n          x: 'right'\n          y: 'bottom'\n        opacity: 0.1\n      tooltip:\n        template: tooltipMode\n        callback: tooltipMode\n      line:\n        stroke: width: 1\n      point:\n        r:           4\n        mode:        'fill'\n        onMouseover: \"multipleVerticalInverted\"\n        color:       'light' # Color or palette name\n        stroke:      {width: 1, color: null}\n      axis:\n        y: orient: \"right\"\n      pluginsIconsFolder: \"icons\"\n    series: series\n  )\n  ylchart.render()\n\n  series.push {\n    name: \"Serie 2\"\n    data: genDataFunc(24*3600*120, 36*3600*2, Math.tan)\n    config:\n      color: \"#ff0001\"\n      stroke: {width: 1}\n  }\n\n  ylchart2 = new M.ylchart.Main(\n    config:\n      style:\n        label:\n          x:\n            \"font-size\": 25\n        logo:\n          \"xlink:href\": \"your-logo.svg\"\n          height: 30\n          width: 30\n      canvas:\n        render: 'dotline' # dot, line, dotline\n        width: 900.0\n        height: 400.0\n        selector: '#chart2'\n        padding: [50,50]\n        scale: x: nice: true\n        label:\n          x: text: \"Months2\"\n          y: text: \"Values2\"\n      logo:\n        position:\n          x: 'right'\n          y: 'bottom'\n        opacity: 0.1\n      tooltip:\n        template: tooltipMode\n        callback: tooltipMode\n      line:\n        stroke: width: 1\n      point:\n        r:           4\n        mode:        'fill'\n        onMouseover: \"multipleVerticalInverted\"\n        color:       'light' # Color or palette name\n        stroke:      {width: 1, color: null}\n      axis:\n        y: orient: \"right\"\n      pluginsIconsFolder: \"icons\"\n    series: series\n  )\n  ylchart2.render()\n","module.exports = exp = {}\n\nM = {\n  logo: require 'ylchart/components/logo'\n}\n\nexp.onClick = (context, selector, conf) ->\n  # Replace logo by copyright text\n  image = context._CLASS.logo.getDOM().root.remove()\n  text = context._SVG.append(\"text\")\n    .attr(\"fill\", conf.copyright.color)\n    .attr(\"font-size\", conf.copyright.fontSize+\"px\")\n    .text(conf.copyright.text)\n\n  # Remove the legends that are hidden.\n  $(context._CLASS.legend.getDOM().root.node()).find(\".legend.option\").hide()\n  $(context._CLASS.legend.getDOM().root.node()).find(\".legend[data-hide='true']\").hide()\n\n  width = context._CONF.canvas.width\n  height = context._CONF.canvas.height\n  textDim = text.node().getBBox()\n  pX = width-context._CONF.canvas.padding[0]-10\n  pY = height-context._CONF.canvas.padding[1]-3\n  text.attr(\"text-anchor\", \"end\")\n  text.attr(\"transform\", \"translate(#{pX}, #{pY})\")\n\n  # Converting the SVG to a canvas\n  svg = $(selector).find(\"svg\")[0]\n  svg_xml = (new XMLSerializer()).serializeToString(svg)\n  canvas = document.createElement('canvas')\n  $(\"body\").after(canvas)\n  canvg(canvas, svg_xml)\n  $(canvas).remove()\n\n  # Convert canvas to PNG\n  img = canvas.toDataURL(\"image/png\")\n\n  # Internet explorer can't save data URI scheme\n  ua = window.navigator.userAgent\n  msie = ua.indexOf(\"MSIE \")\n  if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./))\n    console.log \"Internet explorer detected\"\n    window.winIE = win = window.open()\n    win.document.body.innerHTML = \"<center><img src='\"+img+\"'>\"+\n      \"</img><br>Please right click on the image and choose 'Save image as...'</center>\"\n    win.document.close()\n    #setTimeout('window.winIE.document.execCommand(\"SaveAs\")', 1000)\n  else\n    a = document.createElement('a')\n    a.href = img\n    a.download = \"your-logo.png\"\n    $(\"body\").append(a)\n    a.click()\n\n  # Trick: we need to re-render the logo\n  context._CLASS.logo = new M.logo.Main(context._SVG)\n  context._CLASS.logo.render(\n    confCanvas: context._CONF.canvas\n    confLogo: context._CONF.logo\n    style: context._CONF.style.logo\n  )\n  text.remove()\n\n  # Show the options of the legend\n  $(context._CLASS.legend.getDOM().root.node()).find(\".legend.option\").show()\n  $(context._CLASS.legend.getDOM().root.node()).find(\".legend[data-hide='true']\").show()\n","module.exports = exp = {}\n\n# Computes the padding automatically to display correctly the\n# graph and dots\nexp.computePadding = computePadding = (confPoint) ->\n  pad = confPoint.r+confPoint.stroke.width/2.0\n  [pad,pad]\n","module.exports = exp = {}\n\nexp.computeDomain = getDomain = (series) ->\n  maxX = maxY = Number.MIN_VALUE\n  minX = minY = Number.MAX_VALUE\n  for serie in series\n    for point in serie.data\n      maxX = point.x if point.x > maxX\n      minX = point.x if point.x < minX\n      maxY = point.y if point.y > maxY\n      minY = point.y if point.y < minY\n  {minX: minX, maxX: maxX, minY: minY, maxY: maxY}\n\n# Fix the domain if minX == maxX and same for Y\nexp.fixDomain = fixDomain = (args) ->\n  domain   = args.domain\n  confDomain = args.confDomain\n  if domain.maxX == domain.minX\n    domain.maxX += confDomain.x.margin\n    domain.minX -= confDomain.x.margin\n  if domain.maxY == domain.minY\n    domain.maxY += confDomain.y.margin\n    domain.minY -= confDomain.y.margin\n","module.exports = exp = {}\n\nexp.Main = class Main\n  constructor: (palette) ->\n    _palettes = @palettes()\n    @_PALETTE = _palettes[palette]\n    @_INDEX = 0\n\n  isDefined: ->\n    if @_PALETTE?\n      return true\n    return false\n\n  color: (i) ->\n    # Get the next color\n    return @_PALETTE[i%@_PALETTE.length]\n\n  palettes: ->\n    schemes = {}\n    schemes.spectrum14 = ['#ecb796','#dc8f70','#b2a470','#92875a',\n      '#716c49','#d2ed82','#bbe468','#a1d05d','#e7cbe6','#d8aad6',\n      '#a888c2','#9dc2d3','#649eb9', '#387aa3'].reverse()\n\n    schemes.spectrum2000 = ['#57306f','#514c76','#646583','#738394',\n      '#6b9c7d','#84b665','#a7ca50','#bfe746','#e2f528','#fff726',\n      '#ecdd00','#d4b11d','#de8800','#de4800','#c91515','#9a0000',\n      '#7b0429','#580839','#31082b']\n\n    schemes.spectrum2001 = ['#2f243f','#3c2c55','#4a3768','#565270',\n      '#6b6b7c','#72957f','#86ad6e','#a1bc5e','#b8d954','#d3e04e',\n      '#ccad2a','#cc8412','#c1521d','#ad3821','#8a1010','#681717',\n      '#531e1e','#3d1818','#320a1b']\n\n    schemes.classic9 = ['#423d4f','#4a6860','#848f39','#a2b73c',\n      '#ddcb53','#c5a32f','#7d5836','#963b20','#7c2626','#491d37',\n      '#2f254a'].reverse()\n\n    schemes.httpStatus = {\n      503: '#ea5029', 502: '#d23f14', 500: '#bf3613'\n      410: '#efacea',409: '#e291dc',403: '#f457e8',408: '#e121d2',401: '#b92dae'\n      405: '#f47ceb',404: '#a82a9f',400: '#b263c6',301: '#6fa024',302: '#87c32b'\n      307: '#a0d84c',304: '#28b55c',200: '#1a4f74',206: '#27839f',201: '#52adc9'\n      202: '#7c979f',203: '#a5b8bd',204: '#c1cdd1'}\n\n    schemes.colorwheel = ['#b5b6a9','#858772','#785f43','#96557e',\n      '#4682b4','#65b9ac','#73c03a','#cb513a'].reverse()\n\n    schemes.cool = ['#5e9d2f','#73c03a','#4682b4','#7bc3b8','#a9884e',\n      '#c1b266','#a47493','#c09fb5']\n\n    schemes.munin = ['#00cc00','#0066b3','#ff8000','#ffcc00','#330099',\n      '#990099','#ccff00','#ff0000','#808080','#008f00','#00487d',\n      '#b35a00','#b38f00','#6b006b','#8fb300','#b30000','#bebebe',\n      '#80ff80','#80c9ff','#ffc080','#ffe680','#aa80ff','#ee00cc',\n      '#ff8080','#666600','#ffbfff','#00ffcc','#cc6699','#999900']\n\n    schemes.paired = [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\n        \"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n\n    schemes.light = [\"#0099ef\",\"#ff009d\",\"#56b501\",\"#ffee52\",\"#a34100\",\"#0018ef\",\"#ff89d2\",\"#6ee801\",\"#ef0018\",\"#ffa468\",\"#00efd7\",\"#b3006e\",\"#aefe66\",\"#ed7446\",\"#572200\",\"#0010a3\",\"#326901\"]\n    return schemes\n","module.exports = exp = {}\nM = {\n  domain: require 'ylchart/utils/domain'\n}\n\n# Computes D3JS Scales for X and Y\nexp.computeScales = computeScales = (args)->\n  _axis   = args.confAxis\n  _grid   = args.confGrid\n  _domain = args.domain\n  _canvas = args.confCanvas\n  _pad    = _canvas.padding\n\n  # WARN: care we changed from width to x and from height to y !\n  scales = {x: d3.scale.linear(), y: d3.scale.linear()}\n\n  scales.x = d3.time.scale.utc() if _grid.x.format?\n  scales.x.domain([_domain.minX,_domain.maxX]).range([_pad[0], _canvas.width-_pad[0]])\n  scales.x.nice() if _canvas.scale.x.nice\n\n  scales.y = d3.time.scale() if _grid.y.format?\n  scales.y.domain([_domain.minY,_domain.maxY]).range([_canvas.height-_pad[1], _pad[1]])\n  scales.y.nice()if _canvas.scale.y.nice\n\n  return scales\n","module.exports = exp = {}\n\n\nexp.Main = class Main\n  constructor: (DOM) ->\n    @DOM = DOM\n\n  apply: (styles) ->\n    for sK, sV of styles\n      @DOM.attr(sK, sV)\n    return @DOM\n","module.exports = exp = {}\n\nexp.Main = class Main\n  constructor:(params={}) ->\n    @_CONF =\n      lang: params.lang ? 'enl'\n\n    @_DATE = new Date()\n    @_TIMESTAMP = @_DATE.getTime()\n    @_MONTHSNAME = {}\n    @_MONTHSNAME.en = ['Jan','Feb','Mar','Apr','May','Jun',\n      'Jul','Aug','Sep','Oct','Nov','Dec']\n    @_MONTHSNAME.enl = ['January','February','March','April','May','June',\n      'July','August','September','October','November','December']\n    @_MONTHSNAME.fr = ['Jan','Fév','Mar','Avr','Mai','Juin',\n      'Juil','Août','Sep','Oct','Nov','Déc']\n    @_MONTHSNAME.frl = ['Janvier','Février','Mars','Avril','Mai','Juin',\n      'Juil','Août','Septembre','Octobre','Novembre','Décembre']\n\n  monthsName: ->\n    @_MONTHSNAME[@_CONF.lang]\n\n  getMonth: ->\n    @monthsName()[@_DATE.getMonth()]\n  getDay: ->\n    @_DATE.getDay()\n  getFullDate: ->\n    @_DATE.getDay()+\" \"+@getMonth()+\" \"+@_DATE.getYear()+\" \"+\n      @_DATE.getHours()+\":\"+@_DATE.getMinutes()\n\n\n  getDate: ->\n    return @_DATE\n\n  setTimestamp: (t) ->\n    return @_TIMESTAMP if not t?\n    @_DATE = new Date(parseInt(t)*1000)\n    @_TIMESTAMP = parseInt(t)\n\n","module.exports = exp = {}\n\n\n# Update the obj1 with the obj2\nexp.updateObject = updateObject = (obj1, obj2, replace=true) ->\n  # Check if the obj is a node.\n  isNode = (obj) ->\n    if obj?[\"0\"]?.nodeName? then true else false\n\n  update = (obj1,obj2, replace=true) ->\n    if obj2?\n      for k of obj2\n        if isNode(obj2[k]) # We copy the node as it is\n          obj1[k] = obj2[k][0] ? obj1[k][0]\n        else if typeof obj2[k] == 'object' and obj2[k] != null\n          obj1[k] = {} if not obj1[k]?\n          update obj1[k], obj2[k], replace\n        else\n          if replace\n            obj1[k] = obj2[k] ? obj1[k]\n          else\n            obj1[k] = obj1[k] ? obj2[k]\n    return obj1\n  update(obj1, obj2, replace)\n\n\n# Prepare the series for the chart by adding\n# some configuration options to individual points\nexp.prepareSeries = prepareSeries = (args) ->\n  throw new Error(\"No series defined, #{args.series}\"+\n    \"should be an array of objects\") if not args.series?.length?\n  throw new Error(\"At least one serie must be defined\") if args.series.length < 1\n  for serie, i in args.series\n    for point in serie.data\n      point.serie = i\n      point.config = { color: args.confPoint.color }\n      if args.palette.isDefined() # Set the palette color\n        point.config.color = args.palette.color(i)\n      if serie.config?.color? # Override by specific serie color\n        point.config.color = serie.config.color\n      point.config.r = serie.config?.r || args.confPoint.r\n      point.config.stroke = { width: args.confPoint.stroke.width }\n      if serie.config?.stroke?.width? # Override by specific stroke width\n        point.config.stroke.width = serie.config.stroke.width\n  args.series\n"]}